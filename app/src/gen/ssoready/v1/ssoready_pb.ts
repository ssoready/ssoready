// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file ssoready/v1/ssoready.proto (package ssoready.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Empty, Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum ssoready.v1.SAMLFlowStatus
 */
export enum SAMLFlowStatus {
  /**
   * @generated from enum value: SAML_FLOW_STATUS_UNSPECIFIED = 0;
   */
  SAML_FLOW_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SAML_FLOW_STATUS_IN_PROGRESS = 1;
   */
  SAML_FLOW_STATUS_IN_PROGRESS = 1,

  /**
   * @generated from enum value: SAML_FLOW_STATUS_FAILED = 2;
   */
  SAML_FLOW_STATUS_FAILED = 2,

  /**
   * @generated from enum value: SAML_FLOW_STATUS_SUCCEEDED = 3;
   */
  SAML_FLOW_STATUS_SUCCEEDED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SAMLFlowStatus)
proto3.util.setEnumType(SAMLFlowStatus, "ssoready.v1.SAMLFlowStatus", [
  { no: 0, name: "SAML_FLOW_STATUS_UNSPECIFIED" },
  { no: 1, name: "SAML_FLOW_STATUS_IN_PROGRESS" },
  { no: 2, name: "SAML_FLOW_STATUS_FAILED" },
  { no: 3, name: "SAML_FLOW_STATUS_SUCCEEDED" },
]);

/**
 * @generated from message ssoready.v1.AppUser
 */
export class AppUser extends Message<AppUser> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * @generated from field: string email = 3;
   */
  email = "";

  constructor(data?: PartialMessage<AppUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.AppUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppUser {
    return new AppUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppUser {
    return new AppUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppUser {
    return new AppUser().fromJsonString(jsonString, options);
  }

  static equals(a: AppUser | PlainMessage<AppUser> | undefined, b: AppUser | PlainMessage<AppUser> | undefined): boolean {
    return proto3.util.equals(AppUser, a, b);
  }
}

/**
 * @generated from message ssoready.v1.Environment
 */
export class Environment extends Message<Environment> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string redirect_url = 2;
   */
  redirectUrl = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: string auth_url = 4;
   */
  authUrl = "";

  /**
   * @generated from field: string oauth_redirect_uri = 5;
   */
  oauthRedirectUri = "";

  constructor(data?: PartialMessage<Environment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.Environment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "auth_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "oauth_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Environment {
    return new Environment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Environment {
    return new Environment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Environment {
    return new Environment().fromJsonString(jsonString, options);
  }

  static equals(a: Environment | PlainMessage<Environment> | undefined, b: Environment | PlainMessage<Environment> | undefined): boolean {
    return proto3.util.equals(Environment, a, b);
  }
}

/**
 * @generated from message ssoready.v1.APIKey
 */
export class APIKey extends Message<APIKey> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  /**
   * @generated from field: string secret_token = 3;
   */
  secretToken = "";

  constructor(data?: PartialMessage<APIKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.APIKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "secret_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): APIKey {
    return new APIKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): APIKey {
    return new APIKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): APIKey {
    return new APIKey().fromJsonString(jsonString, options);
  }

  static equals(a: APIKey | PlainMessage<APIKey> | undefined, b: APIKey | PlainMessage<APIKey> | undefined): boolean {
    return proto3.util.equals(APIKey, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SAMLOAuthClient
 */
export class SAMLOAuthClient extends Message<SAMLOAuthClient> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  /**
   * @generated from field: string client_secret = 3;
   */
  clientSecret = "";

  constructor(data?: PartialMessage<SAMLOAuthClient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SAMLOAuthClient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLOAuthClient {
    return new SAMLOAuthClient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLOAuthClient {
    return new SAMLOAuthClient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLOAuthClient {
    return new SAMLOAuthClient().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLOAuthClient | PlainMessage<SAMLOAuthClient> | undefined, b: SAMLOAuthClient | PlainMessage<SAMLOAuthClient> | undefined): boolean {
    return proto3.util.equals(SAMLOAuthClient, a, b);
  }
}

/**
 * @generated from message ssoready.v1.Organization
 */
export class Organization extends Message<Organization> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  /**
   * @generated from field: string external_id = 3;
   */
  externalId = "";

  /**
   * @generated from field: repeated string domains = 4;
   */
  domains: string[] = [];

  constructor(data?: PartialMessage<Organization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.Organization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "domains", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization {
    return new Organization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJsonString(jsonString, options);
  }

  static equals(a: Organization | PlainMessage<Organization> | undefined, b: Organization | PlainMessage<Organization> | undefined): boolean {
    return proto3.util.equals(Organization, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SAMLConnection
 */
export class SAMLConnection extends Message<SAMLConnection> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: bool primary = 8;
   */
  primary = false;

  /**
   * @generated from field: string idp_redirect_url = 3;
   */
  idpRedirectUrl = "";

  /**
   * @generated from field: string idp_certificate = 4;
   */
  idpCertificate = "";

  /**
   * @generated from field: string idp_entity_id = 5;
   */
  idpEntityId = "";

  /**
   * @generated from field: string sp_entity_id = 6;
   */
  spEntityId = "";

  /**
   * @generated from field: string sp_acs_url = 7;
   */
  spAcsUrl = "";

  constructor(data?: PartialMessage<SAMLConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SAMLConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "primary", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "idp_redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "idp_certificate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "idp_entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sp_entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "sp_acs_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLConnection {
    return new SAMLConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLConnection {
    return new SAMLConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLConnection {
    return new SAMLConnection().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLConnection | PlainMessage<SAMLConnection> | undefined, b: SAMLConnection | PlainMessage<SAMLConnection> | undefined): boolean {
    return proto3.util.equals(SAMLConnection, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SAMLFlow
 */
export class SAMLFlow extends Message<SAMLFlow> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string saml_connection_id = 2;
   */
  samlConnectionId = "";

  /**
   * @generated from field: ssoready.v1.SAMLFlowStatus status = 17;
   */
  status = SAMLFlowStatus.SAML_FLOW_STATUS_UNSPECIFIED;

  /**
   * @generated from oneof ssoready.v1.SAMLFlow.error
   */
  error: {
    /**
     * @generated from field: google.protobuf.Empty unsigned_assertion = 22;
     */
    value: Empty;
    case: "unsignedAssertion";
  } | {
    /**
     * @generated from field: string bad_issuer = 18;
     */
    value: string;
    case: "badIssuer";
  } | {
    /**
     * @generated from field: string bad_audience = 19;
     */
    value: string;
    case: "badAudience";
  } | {
    /**
     * @generated from field: string bad_subject_id = 20;
     */
    value: string;
    case: "badSubjectId";
  } | {
    /**
     * @generated from field: string email_outside_organization_domains = 21;
     */
    value: string;
    case: "emailOutsideOrganizationDomains";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: string state = 3;
   */
  state = "";

  /**
   * @generated from field: string email = 4;
   */
  email = "";

  /**
   * @generated from field: map<string, string> attributes = 5;
   */
  attributes: { [key: string]: string } = {};

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 7;
   */
  updateTime?: Timestamp;

  /**
   * @generated from field: string auth_redirect_url = 8;
   */
  authRedirectUrl = "";

  /**
   * @generated from field: google.protobuf.Timestamp get_redirect_time = 9;
   */
  getRedirectTime?: Timestamp;

  /**
   * @generated from field: string initiate_request = 10;
   */
  initiateRequest = "";

  /**
   * @generated from field: google.protobuf.Timestamp initiate_time = 11;
   */
  initiateTime?: Timestamp;

  /**
   * @generated from field: string assertion = 12;
   */
  assertion = "";

  /**
   * @generated from field: string app_redirect_url = 13;
   */
  appRedirectUrl = "";

  /**
   * @generated from field: google.protobuf.Timestamp receive_assertion_time = 14;
   */
  receiveAssertionTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp redeem_time = 15;
   */
  redeemTime?: Timestamp;

  /**
   * @generated from field: string redeem_response = 16;
   */
  redeemResponse = "";

  constructor(data?: PartialMessage<SAMLFlow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SAMLFlow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "saml_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "status", kind: "enum", T: proto3.getEnumType(SAMLFlowStatus) },
    { no: 22, name: "unsigned_assertion", kind: "message", T: Empty, oneof: "error" },
    { no: 18, name: "bad_issuer", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "error" },
    { no: 19, name: "bad_audience", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "error" },
    { no: 20, name: "bad_subject_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "error" },
    { no: 21, name: "email_outside_organization_domains", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "error" },
    { no: 3, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "attributes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 6, name: "create_time", kind: "message", T: Timestamp },
    { no: 7, name: "update_time", kind: "message", T: Timestamp },
    { no: 8, name: "auth_redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "get_redirect_time", kind: "message", T: Timestamp },
    { no: 10, name: "initiate_request", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "initiate_time", kind: "message", T: Timestamp },
    { no: 12, name: "assertion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "app_redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "receive_assertion_time", kind: "message", T: Timestamp },
    { no: 15, name: "redeem_time", kind: "message", T: Timestamp },
    { no: 16, name: "redeem_response", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLFlow {
    return new SAMLFlow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLFlow {
    return new SAMLFlow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLFlow {
    return new SAMLFlow().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLFlow | PlainMessage<SAMLFlow> | undefined, b: SAMLFlow | PlainMessage<SAMLFlow> | undefined): boolean {
    return proto3.util.equals(SAMLFlow, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetSAMLRedirectURLRequest
 */
export class GetSAMLRedirectURLRequest extends Message<GetSAMLRedirectURLRequest> {
  /**
   * @generated from field: string saml_connection_id = 1;
   */
  samlConnectionId = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: string organization_external_id = 3;
   */
  organizationExternalId = "";

  /**
   * @generated from field: string state = 4;
   */
  state = "";

  constructor(data?: PartialMessage<GetSAMLRedirectURLRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetSAMLRedirectURLRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_external_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLRedirectURLRequest {
    return new GetSAMLRedirectURLRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLRedirectURLRequest {
    return new GetSAMLRedirectURLRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLRedirectURLRequest {
    return new GetSAMLRedirectURLRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLRedirectURLRequest | PlainMessage<GetSAMLRedirectURLRequest> | undefined, b: GetSAMLRedirectURLRequest | PlainMessage<GetSAMLRedirectURLRequest> | undefined): boolean {
    return proto3.util.equals(GetSAMLRedirectURLRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetSAMLRedirectURLResponse
 */
export class GetSAMLRedirectURLResponse extends Message<GetSAMLRedirectURLResponse> {
  /**
   * @generated from field: string redirect_url = 1;
   */
  redirectUrl = "";

  constructor(data?: PartialMessage<GetSAMLRedirectURLResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetSAMLRedirectURLResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLRedirectURLResponse {
    return new GetSAMLRedirectURLResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLRedirectURLResponse {
    return new GetSAMLRedirectURLResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLRedirectURLResponse {
    return new GetSAMLRedirectURLResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLRedirectURLResponse | PlainMessage<GetSAMLRedirectURLResponse> | undefined, b: GetSAMLRedirectURLResponse | PlainMessage<GetSAMLRedirectURLResponse> | undefined): boolean {
    return proto3.util.equals(GetSAMLRedirectURLResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.RedeemSAMLAccessCodeRequest
 */
export class RedeemSAMLAccessCodeRequest extends Message<RedeemSAMLAccessCodeRequest> {
  /**
   * @generated from field: string saml_access_code = 1;
   */
  samlAccessCode = "";

  constructor(data?: PartialMessage<RedeemSAMLAccessCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.RedeemSAMLAccessCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_access_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RedeemSAMLAccessCodeRequest {
    return new RedeemSAMLAccessCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RedeemSAMLAccessCodeRequest {
    return new RedeemSAMLAccessCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RedeemSAMLAccessCodeRequest {
    return new RedeemSAMLAccessCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RedeemSAMLAccessCodeRequest | PlainMessage<RedeemSAMLAccessCodeRequest> | undefined, b: RedeemSAMLAccessCodeRequest | PlainMessage<RedeemSAMLAccessCodeRequest> | undefined): boolean {
    return proto3.util.equals(RedeemSAMLAccessCodeRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.RedeemSAMLAccessCodeResponse
 */
export class RedeemSAMLAccessCodeResponse extends Message<RedeemSAMLAccessCodeResponse> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: string state = 2;
   */
  state = "";

  /**
   * @generated from field: map<string, string> attributes = 3;
   */
  attributes: { [key: string]: string } = {};

  /**
   * @generated from field: string organization_id = 4;
   */
  organizationId = "";

  /**
   * @generated from field: string organization_external_id = 5;
   */
  organizationExternalId = "";

  /**
   * @generated from field: string saml_flow_id = 6;
   */
  samlFlowId = "";

  constructor(data?: PartialMessage<RedeemSAMLAccessCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.RedeemSAMLAccessCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "attributes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 4, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "organization_external_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "saml_flow_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RedeemSAMLAccessCodeResponse {
    return new RedeemSAMLAccessCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RedeemSAMLAccessCodeResponse {
    return new RedeemSAMLAccessCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RedeemSAMLAccessCodeResponse {
    return new RedeemSAMLAccessCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RedeemSAMLAccessCodeResponse | PlainMessage<RedeemSAMLAccessCodeResponse> | undefined, b: RedeemSAMLAccessCodeResponse | PlainMessage<RedeemSAMLAccessCodeResponse> | undefined): boolean {
    return proto3.util.equals(RedeemSAMLAccessCodeResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.VerifyEmailRequest
 */
export class VerifyEmailRequest extends Message<VerifyEmailRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  constructor(data?: PartialMessage<VerifyEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.VerifyEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyEmailRequest {
    return new VerifyEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyEmailRequest {
    return new VerifyEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyEmailRequest {
    return new VerifyEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyEmailRequest | PlainMessage<VerifyEmailRequest> | undefined, b: VerifyEmailRequest | PlainMessage<VerifyEmailRequest> | undefined): boolean {
    return proto3.util.equals(VerifyEmailRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SignInRequest
 */
export class SignInRequest extends Message<SignInRequest> {
  /**
   * @generated from field: string google_credential = 1;
   */
  googleCredential = "";

  /**
   * @generated from field: string email_verify_token = 2;
   */
  emailVerifyToken = "";

  constructor(data?: PartialMessage<SignInRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SignInRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "google_credential", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email_verify_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInRequest {
    return new SignInRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInRequest {
    return new SignInRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInRequest {
    return new SignInRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignInRequest | PlainMessage<SignInRequest> | undefined, b: SignInRequest | PlainMessage<SignInRequest> | undefined): boolean {
    return proto3.util.equals(SignInRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SignInResponse
 */
export class SignInResponse extends Message<SignInResponse> {
  /**
   * @generated from field: string session_token = 1;
   */
  sessionToken = "";

  constructor(data?: PartialMessage<SignInResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SignInResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInResponse {
    return new SignInResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInResponse {
    return new SignInResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInResponse {
    return new SignInResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignInResponse | PlainMessage<SignInResponse> | undefined, b: SignInResponse | PlainMessage<SignInResponse> | undefined): boolean {
    return proto3.util.equals(SignInResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SignOutRequest
 */
export class SignOutRequest extends Message<SignOutRequest> {
  constructor(data?: PartialMessage<SignOutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SignOutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignOutRequest {
    return new SignOutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignOutRequest {
    return new SignOutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignOutRequest {
    return new SignOutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignOutRequest | PlainMessage<SignOutRequest> | undefined, b: SignOutRequest | PlainMessage<SignOutRequest> | undefined): boolean {
    return proto3.util.equals(SignOutRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.SignOutResponse
 */
export class SignOutResponse extends Message<SignOutResponse> {
  constructor(data?: PartialMessage<SignOutResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.SignOutResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignOutResponse {
    return new SignOutResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignOutResponse {
    return new SignOutResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignOutResponse {
    return new SignOutResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignOutResponse | PlainMessage<SignOutResponse> | undefined, b: SignOutResponse | PlainMessage<SignOutResponse> | undefined): boolean {
    return proto3.util.equals(SignOutResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.WhoamiRequest
 */
export class WhoamiRequest extends Message<WhoamiRequest> {
  constructor(data?: PartialMessage<WhoamiRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.WhoamiRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WhoamiRequest {
    return new WhoamiRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WhoamiRequest {
    return new WhoamiRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WhoamiRequest {
    return new WhoamiRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WhoamiRequest | PlainMessage<WhoamiRequest> | undefined, b: WhoamiRequest | PlainMessage<WhoamiRequest> | undefined): boolean {
    return proto3.util.equals(WhoamiRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.WhoamiResponse
 */
export class WhoamiResponse extends Message<WhoamiResponse> {
  /**
   * @generated from field: string app_user_id = 1;
   */
  appUserId = "";

  /**
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * @generated from field: string email = 3;
   */
  email = "";

  constructor(data?: PartialMessage<WhoamiResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.WhoamiResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "app_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WhoamiResponse {
    return new WhoamiResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WhoamiResponse {
    return new WhoamiResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WhoamiResponse {
    return new WhoamiResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WhoamiResponse | PlainMessage<WhoamiResponse> | undefined, b: WhoamiResponse | PlainMessage<WhoamiResponse> | undefined): boolean {
    return proto3.util.equals(WhoamiResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetOnboardingStateRequest
 */
export class GetOnboardingStateRequest extends Message<GetOnboardingStateRequest> {
  constructor(data?: PartialMessage<GetOnboardingStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetOnboardingStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOnboardingStateRequest {
    return new GetOnboardingStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOnboardingStateRequest {
    return new GetOnboardingStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOnboardingStateRequest {
    return new GetOnboardingStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOnboardingStateRequest | PlainMessage<GetOnboardingStateRequest> | undefined, b: GetOnboardingStateRequest | PlainMessage<GetOnboardingStateRequest> | undefined): boolean {
    return proto3.util.equals(GetOnboardingStateRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetOnboardingStateResponse
 */
export class GetOnboardingStateResponse extends Message<GetOnboardingStateResponse> {
  /**
   * @generated from field: string dummyidp_app_id = 1;
   */
  dummyidpAppId = "";

  /**
   * @generated from field: string onboarding_environment_id = 2;
   */
  onboardingEnvironmentId = "";

  /**
   * @generated from field: string onboarding_organization_id = 3;
   */
  onboardingOrganizationId = "";

  /**
   * @generated from field: string onboarding_saml_connection_id = 4;
   */
  onboardingSamlConnectionId = "";

  constructor(data?: PartialMessage<GetOnboardingStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetOnboardingStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dummyidp_app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "onboarding_environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "onboarding_organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "onboarding_saml_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOnboardingStateResponse {
    return new GetOnboardingStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOnboardingStateResponse {
    return new GetOnboardingStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOnboardingStateResponse {
    return new GetOnboardingStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOnboardingStateResponse | PlainMessage<GetOnboardingStateResponse> | undefined, b: GetOnboardingStateResponse | PlainMessage<GetOnboardingStateResponse> | undefined): boolean {
    return proto3.util.equals(GetOnboardingStateResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.UpdateOnboardingStateRequest
 */
export class UpdateOnboardingStateRequest extends Message<UpdateOnboardingStateRequest> {
  /**
   * @generated from field: string dummyidp_app_id = 1;
   */
  dummyidpAppId = "";

  /**
   * @generated from field: string onboarding_environment_id = 2;
   */
  onboardingEnvironmentId = "";

  /**
   * @generated from field: string onboarding_organization_id = 3;
   */
  onboardingOrganizationId = "";

  /**
   * @generated from field: string onboarding_saml_connection_id = 4;
   */
  onboardingSamlConnectionId = "";

  constructor(data?: PartialMessage<UpdateOnboardingStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.UpdateOnboardingStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dummyidp_app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "onboarding_environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "onboarding_organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "onboarding_saml_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOnboardingStateRequest {
    return new UpdateOnboardingStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOnboardingStateRequest {
    return new UpdateOnboardingStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOnboardingStateRequest {
    return new UpdateOnboardingStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOnboardingStateRequest | PlainMessage<UpdateOnboardingStateRequest> | undefined, b: UpdateOnboardingStateRequest | PlainMessage<UpdateOnboardingStateRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOnboardingStateRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.OnboardingGetSAMLRedirectURLRequest
 */
export class OnboardingGetSAMLRedirectURLRequest extends Message<OnboardingGetSAMLRedirectURLRequest> {
  /**
   * @generated from field: string api_key_secret_token = 1;
   */
  apiKeySecretToken = "";

  /**
   * @generated from field: string saml_connection_id = 2;
   */
  samlConnectionId = "";

  constructor(data?: PartialMessage<OnboardingGetSAMLRedirectURLRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.OnboardingGetSAMLRedirectURLRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key_secret_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "saml_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnboardingGetSAMLRedirectURLRequest {
    return new OnboardingGetSAMLRedirectURLRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnboardingGetSAMLRedirectURLRequest {
    return new OnboardingGetSAMLRedirectURLRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnboardingGetSAMLRedirectURLRequest {
    return new OnboardingGetSAMLRedirectURLRequest().fromJsonString(jsonString, options);
  }

  static equals(a: OnboardingGetSAMLRedirectURLRequest | PlainMessage<OnboardingGetSAMLRedirectURLRequest> | undefined, b: OnboardingGetSAMLRedirectURLRequest | PlainMessage<OnboardingGetSAMLRedirectURLRequest> | undefined): boolean {
    return proto3.util.equals(OnboardingGetSAMLRedirectURLRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.OnboardingRedeemSAMLAccessCodeRequest
 */
export class OnboardingRedeemSAMLAccessCodeRequest extends Message<OnboardingRedeemSAMLAccessCodeRequest> {
  /**
   * @generated from field: string api_key_secret_token = 1;
   */
  apiKeySecretToken = "";

  /**
   * @generated from field: string saml_access_code = 2;
   */
  samlAccessCode = "";

  constructor(data?: PartialMessage<OnboardingRedeemSAMLAccessCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.OnboardingRedeemSAMLAccessCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key_secret_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "saml_access_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnboardingRedeemSAMLAccessCodeRequest {
    return new OnboardingRedeemSAMLAccessCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnboardingRedeemSAMLAccessCodeRequest {
    return new OnboardingRedeemSAMLAccessCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnboardingRedeemSAMLAccessCodeRequest {
    return new OnboardingRedeemSAMLAccessCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: OnboardingRedeemSAMLAccessCodeRequest | PlainMessage<OnboardingRedeemSAMLAccessCodeRequest> | undefined, b: OnboardingRedeemSAMLAccessCodeRequest | PlainMessage<OnboardingRedeemSAMLAccessCodeRequest> | undefined): boolean {
    return proto3.util.equals(OnboardingRedeemSAMLAccessCodeRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListEnvironmentsRequest
 */
export class ListEnvironmentsRequest extends Message<ListEnvironmentsRequest> {
  /**
   * @generated from field: string page_token = 1;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListEnvironmentsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListEnvironmentsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEnvironmentsRequest {
    return new ListEnvironmentsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEnvironmentsRequest {
    return new ListEnvironmentsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEnvironmentsRequest {
    return new ListEnvironmentsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEnvironmentsRequest | PlainMessage<ListEnvironmentsRequest> | undefined, b: ListEnvironmentsRequest | PlainMessage<ListEnvironmentsRequest> | undefined): boolean {
    return proto3.util.equals(ListEnvironmentsRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListEnvironmentsResponse
 */
export class ListEnvironmentsResponse extends Message<ListEnvironmentsResponse> {
  /**
   * @generated from field: repeated ssoready.v1.Environment environments = 1;
   */
  environments: Environment[] = [];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListEnvironmentsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListEnvironmentsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environments", kind: "message", T: Environment, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEnvironmentsResponse {
    return new ListEnvironmentsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEnvironmentsResponse {
    return new ListEnvironmentsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEnvironmentsResponse {
    return new ListEnvironmentsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEnvironmentsResponse | PlainMessage<ListEnvironmentsResponse> | undefined, b: ListEnvironmentsResponse | PlainMessage<ListEnvironmentsResponse> | undefined): boolean {
    return proto3.util.equals(ListEnvironmentsResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetEnvironmentRequest
 */
export class GetEnvironmentRequest extends Message<GetEnvironmentRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEnvironmentRequest {
    return new GetEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEnvironmentRequest {
    return new GetEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEnvironmentRequest {
    return new GetEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetEnvironmentRequest | PlainMessage<GetEnvironmentRequest> | undefined, b: GetEnvironmentRequest | PlainMessage<GetEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(GetEnvironmentRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.CreateEnvironmentRequest
 */
export class CreateEnvironmentRequest extends Message<CreateEnvironmentRequest> {
  /**
   * @generated from field: ssoready.v1.Environment environment = 1;
   */
  environment?: Environment;

  constructor(data?: PartialMessage<CreateEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.CreateEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment", kind: "message", T: Environment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEnvironmentRequest {
    return new CreateEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEnvironmentRequest {
    return new CreateEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEnvironmentRequest {
    return new CreateEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEnvironmentRequest | PlainMessage<CreateEnvironmentRequest> | undefined, b: CreateEnvironmentRequest | PlainMessage<CreateEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(CreateEnvironmentRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.UpdateEnvironmentRequest
 */
export class UpdateEnvironmentRequest extends Message<UpdateEnvironmentRequest> {
  /**
   * @generated from field: ssoready.v1.Environment environment = 1;
   */
  environment?: Environment;

  constructor(data?: PartialMessage<UpdateEnvironmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.UpdateEnvironmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment", kind: "message", T: Environment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironmentRequest {
    return new UpdateEnvironmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironmentRequest {
    return new UpdateEnvironmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironmentRequest {
    return new UpdateEnvironmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironmentRequest | PlainMessage<UpdateEnvironmentRequest> | undefined, b: UpdateEnvironmentRequest | PlainMessage<UpdateEnvironmentRequest> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironmentRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListAPIKeysRequest
 */
export class ListAPIKeysRequest extends Message<ListAPIKeysRequest> {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId = "";

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListAPIKeysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListAPIKeysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAPIKeysRequest {
    return new ListAPIKeysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAPIKeysRequest {
    return new ListAPIKeysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAPIKeysRequest {
    return new ListAPIKeysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAPIKeysRequest | PlainMessage<ListAPIKeysRequest> | undefined, b: ListAPIKeysRequest | PlainMessage<ListAPIKeysRequest> | undefined): boolean {
    return proto3.util.equals(ListAPIKeysRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListAPIKeysResponse
 */
export class ListAPIKeysResponse extends Message<ListAPIKeysResponse> {
  /**
   * @generated from field: repeated ssoready.v1.APIKey api_keys = 1;
   */
  apiKeys: APIKey[] = [];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListAPIKeysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListAPIKeysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_keys", kind: "message", T: APIKey, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAPIKeysResponse {
    return new ListAPIKeysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAPIKeysResponse {
    return new ListAPIKeysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAPIKeysResponse {
    return new ListAPIKeysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAPIKeysResponse | PlainMessage<ListAPIKeysResponse> | undefined, b: ListAPIKeysResponse | PlainMessage<ListAPIKeysResponse> | undefined): boolean {
    return proto3.util.equals(ListAPIKeysResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetAPIKeyRequest
 */
export class GetAPIKeyRequest extends Message<GetAPIKeyRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetAPIKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetAPIKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAPIKeyRequest {
    return new GetAPIKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAPIKeyRequest {
    return new GetAPIKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAPIKeyRequest {
    return new GetAPIKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAPIKeyRequest | PlainMessage<GetAPIKeyRequest> | undefined, b: GetAPIKeyRequest | PlainMessage<GetAPIKeyRequest> | undefined): boolean {
    return proto3.util.equals(GetAPIKeyRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.CreateAPIKeyRequest
 */
export class CreateAPIKeyRequest extends Message<CreateAPIKeyRequest> {
  /**
   * @generated from field: ssoready.v1.APIKey api_key = 1;
   */
  apiKey?: APIKey;

  constructor(data?: PartialMessage<CreateAPIKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.CreateAPIKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key", kind: "message", T: APIKey },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAPIKeyRequest {
    return new CreateAPIKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAPIKeyRequest {
    return new CreateAPIKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAPIKeyRequest {
    return new CreateAPIKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateAPIKeyRequest | PlainMessage<CreateAPIKeyRequest> | undefined, b: CreateAPIKeyRequest | PlainMessage<CreateAPIKeyRequest> | undefined): boolean {
    return proto3.util.equals(CreateAPIKeyRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.DeleteAPIKeyRequest
 */
export class DeleteAPIKeyRequest extends Message<DeleteAPIKeyRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteAPIKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.DeleteAPIKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAPIKeyRequest {
    return new DeleteAPIKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAPIKeyRequest {
    return new DeleteAPIKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAPIKeyRequest {
    return new DeleteAPIKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteAPIKeyRequest | PlainMessage<DeleteAPIKeyRequest> | undefined, b: DeleteAPIKeyRequest | PlainMessage<DeleteAPIKeyRequest> | undefined): boolean {
    return proto3.util.equals(DeleteAPIKeyRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListSAMLOAuthClientsRequest
 */
export class ListSAMLOAuthClientsRequest extends Message<ListSAMLOAuthClientsRequest> {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId = "";

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListSAMLOAuthClientsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListSAMLOAuthClientsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSAMLOAuthClientsRequest {
    return new ListSAMLOAuthClientsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSAMLOAuthClientsRequest {
    return new ListSAMLOAuthClientsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSAMLOAuthClientsRequest {
    return new ListSAMLOAuthClientsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSAMLOAuthClientsRequest | PlainMessage<ListSAMLOAuthClientsRequest> | undefined, b: ListSAMLOAuthClientsRequest | PlainMessage<ListSAMLOAuthClientsRequest> | undefined): boolean {
    return proto3.util.equals(ListSAMLOAuthClientsRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListSAMLOAuthClientsResponse
 */
export class ListSAMLOAuthClientsResponse extends Message<ListSAMLOAuthClientsResponse> {
  /**
   * @generated from field: repeated ssoready.v1.SAMLOAuthClient saml_oauth_clients = 1;
   */
  samlOauthClients: SAMLOAuthClient[] = [];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListSAMLOAuthClientsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListSAMLOAuthClientsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_oauth_clients", kind: "message", T: SAMLOAuthClient, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSAMLOAuthClientsResponse {
    return new ListSAMLOAuthClientsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSAMLOAuthClientsResponse {
    return new ListSAMLOAuthClientsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSAMLOAuthClientsResponse {
    return new ListSAMLOAuthClientsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSAMLOAuthClientsResponse | PlainMessage<ListSAMLOAuthClientsResponse> | undefined, b: ListSAMLOAuthClientsResponse | PlainMessage<ListSAMLOAuthClientsResponse> | undefined): boolean {
    return proto3.util.equals(ListSAMLOAuthClientsResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetSAMLOAuthClientRequest
 */
export class GetSAMLOAuthClientRequest extends Message<GetSAMLOAuthClientRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetSAMLOAuthClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetSAMLOAuthClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLOAuthClientRequest {
    return new GetSAMLOAuthClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLOAuthClientRequest {
    return new GetSAMLOAuthClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLOAuthClientRequest {
    return new GetSAMLOAuthClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLOAuthClientRequest | PlainMessage<GetSAMLOAuthClientRequest> | undefined, b: GetSAMLOAuthClientRequest | PlainMessage<GetSAMLOAuthClientRequest> | undefined): boolean {
    return proto3.util.equals(GetSAMLOAuthClientRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.CreateSAMLOAuthClientRequest
 */
export class CreateSAMLOAuthClientRequest extends Message<CreateSAMLOAuthClientRequest> {
  /**
   * @generated from field: ssoready.v1.SAMLOAuthClient saml_oauth_client = 1;
   */
  samlOauthClient?: SAMLOAuthClient;

  constructor(data?: PartialMessage<CreateSAMLOAuthClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.CreateSAMLOAuthClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_oauth_client", kind: "message", T: SAMLOAuthClient },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSAMLOAuthClientRequest {
    return new CreateSAMLOAuthClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSAMLOAuthClientRequest {
    return new CreateSAMLOAuthClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSAMLOAuthClientRequest {
    return new CreateSAMLOAuthClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSAMLOAuthClientRequest | PlainMessage<CreateSAMLOAuthClientRequest> | undefined, b: CreateSAMLOAuthClientRequest | PlainMessage<CreateSAMLOAuthClientRequest> | undefined): boolean {
    return proto3.util.equals(CreateSAMLOAuthClientRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.DeleteSAMLOAuthClientRequest
 */
export class DeleteSAMLOAuthClientRequest extends Message<DeleteSAMLOAuthClientRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteSAMLOAuthClientRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.DeleteSAMLOAuthClientRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSAMLOAuthClientRequest {
    return new DeleteSAMLOAuthClientRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSAMLOAuthClientRequest {
    return new DeleteSAMLOAuthClientRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSAMLOAuthClientRequest {
    return new DeleteSAMLOAuthClientRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSAMLOAuthClientRequest | PlainMessage<DeleteSAMLOAuthClientRequest> | undefined, b: DeleteSAMLOAuthClientRequest | PlainMessage<DeleteSAMLOAuthClientRequest> | undefined): boolean {
    return proto3.util.equals(DeleteSAMLOAuthClientRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListOrganizationsRequest
 */
export class ListOrganizationsRequest extends Message<ListOrganizationsRequest> {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId = "";

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationsRequest | PlainMessage<ListOrganizationsRequest> | undefined, b: ListOrganizationsRequest | PlainMessage<ListOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(ListOrganizationsRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListOrganizationsResponse
 */
export class ListOrganizationsResponse extends Message<ListOrganizationsResponse> {
  /**
   * @generated from field: repeated ssoready.v1.Organization organizations = 1;
   */
  organizations: Organization[] = [];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organizations", kind: "message", T: Organization, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationsResponse | PlainMessage<ListOrganizationsResponse> | undefined, b: ListOrganizationsResponse | PlainMessage<ListOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetOrganizationRequest
 */
export class GetOrganizationRequest extends Message<GetOrganizationRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationRequest {
    return new GetOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationRequest {
    return new GetOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationRequest {
    return new GetOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationRequest | PlainMessage<GetOrganizationRequest> | undefined, b: GetOrganizationRequest | PlainMessage<GetOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.CreateOrganizationRequest
 */
export class CreateOrganizationRequest extends Message<CreateOrganizationRequest> {
  /**
   * @generated from field: ssoready.v1.Organization organization = 1;
   */
  organization?: Organization;

  constructor(data?: PartialMessage<CreateOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.CreateOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization", kind: "message", T: Organization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationRequest {
    return new CreateOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationRequest {
    return new CreateOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationRequest {
    return new CreateOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationRequest | PlainMessage<CreateOrganizationRequest> | undefined, b: CreateOrganizationRequest | PlainMessage<CreateOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.UpdateOrganizationRequest
 */
export class UpdateOrganizationRequest extends Message<UpdateOrganizationRequest> {
  /**
   * @generated from field: ssoready.v1.Organization organization = 1;
   */
  organization?: Organization;

  constructor(data?: PartialMessage<UpdateOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.UpdateOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization", kind: "message", T: Organization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationRequest {
    return new UpdateOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationRequest {
    return new UpdateOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationRequest {
    return new UpdateOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationRequest | PlainMessage<UpdateOrganizationRequest> | undefined, b: UpdateOrganizationRequest | PlainMessage<UpdateOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListSAMLConnectionsRequest
 */
export class ListSAMLConnectionsRequest extends Message<ListSAMLConnectionsRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListSAMLConnectionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListSAMLConnectionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSAMLConnectionsRequest {
    return new ListSAMLConnectionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSAMLConnectionsRequest {
    return new ListSAMLConnectionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSAMLConnectionsRequest {
    return new ListSAMLConnectionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSAMLConnectionsRequest | PlainMessage<ListSAMLConnectionsRequest> | undefined, b: ListSAMLConnectionsRequest | PlainMessage<ListSAMLConnectionsRequest> | undefined): boolean {
    return proto3.util.equals(ListSAMLConnectionsRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListSAMLConnectionsResponse
 */
export class ListSAMLConnectionsResponse extends Message<ListSAMLConnectionsResponse> {
  /**
   * @generated from field: repeated ssoready.v1.SAMLConnection saml_connections = 1;
   */
  samlConnections: SAMLConnection[] = [];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListSAMLConnectionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListSAMLConnectionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_connections", kind: "message", T: SAMLConnection, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSAMLConnectionsResponse {
    return new ListSAMLConnectionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSAMLConnectionsResponse {
    return new ListSAMLConnectionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSAMLConnectionsResponse {
    return new ListSAMLConnectionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSAMLConnectionsResponse | PlainMessage<ListSAMLConnectionsResponse> | undefined, b: ListSAMLConnectionsResponse | PlainMessage<ListSAMLConnectionsResponse> | undefined): boolean {
    return proto3.util.equals(ListSAMLConnectionsResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetSAMLConnectionRequest
 */
export class GetSAMLConnectionRequest extends Message<GetSAMLConnectionRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetSAMLConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetSAMLConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLConnectionRequest {
    return new GetSAMLConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLConnectionRequest {
    return new GetSAMLConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLConnectionRequest {
    return new GetSAMLConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLConnectionRequest | PlainMessage<GetSAMLConnectionRequest> | undefined, b: GetSAMLConnectionRequest | PlainMessage<GetSAMLConnectionRequest> | undefined): boolean {
    return proto3.util.equals(GetSAMLConnectionRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.CreateSAMLConnectionRequest
 */
export class CreateSAMLConnectionRequest extends Message<CreateSAMLConnectionRequest> {
  /**
   * @generated from field: ssoready.v1.SAMLConnection saml_connection = 1;
   */
  samlConnection?: SAMLConnection;

  constructor(data?: PartialMessage<CreateSAMLConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.CreateSAMLConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_connection", kind: "message", T: SAMLConnection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSAMLConnectionRequest {
    return new CreateSAMLConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSAMLConnectionRequest {
    return new CreateSAMLConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSAMLConnectionRequest {
    return new CreateSAMLConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSAMLConnectionRequest | PlainMessage<CreateSAMLConnectionRequest> | undefined, b: CreateSAMLConnectionRequest | PlainMessage<CreateSAMLConnectionRequest> | undefined): boolean {
    return proto3.util.equals(CreateSAMLConnectionRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.UpdateSAMLConnectionRequest
 */
export class UpdateSAMLConnectionRequest extends Message<UpdateSAMLConnectionRequest> {
  /**
   * @generated from field: ssoready.v1.SAMLConnection saml_connection = 1;
   */
  samlConnection?: SAMLConnection;

  constructor(data?: PartialMessage<UpdateSAMLConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.UpdateSAMLConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_connection", kind: "message", T: SAMLConnection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSAMLConnectionRequest {
    return new UpdateSAMLConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSAMLConnectionRequest {
    return new UpdateSAMLConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSAMLConnectionRequest {
    return new UpdateSAMLConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateSAMLConnectionRequest | PlainMessage<UpdateSAMLConnectionRequest> | undefined, b: UpdateSAMLConnectionRequest | PlainMessage<UpdateSAMLConnectionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateSAMLConnectionRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListSAMLFlowsRequest
 */
export class ListSAMLFlowsRequest extends Message<ListSAMLFlowsRequest> {
  /**
   * @generated from field: string saml_connection_id = 1;
   */
  samlConnectionId = "";

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListSAMLFlowsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListSAMLFlowsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSAMLFlowsRequest {
    return new ListSAMLFlowsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSAMLFlowsRequest {
    return new ListSAMLFlowsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSAMLFlowsRequest {
    return new ListSAMLFlowsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListSAMLFlowsRequest | PlainMessage<ListSAMLFlowsRequest> | undefined, b: ListSAMLFlowsRequest | PlainMessage<ListSAMLFlowsRequest> | undefined): boolean {
    return proto3.util.equals(ListSAMLFlowsRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ListSAMLFlowsResponse
 */
export class ListSAMLFlowsResponse extends Message<ListSAMLFlowsResponse> {
  /**
   * @generated from field: repeated ssoready.v1.SAMLFlow saml_flows = 1;
   */
  samlFlows: SAMLFlow[] = [];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListSAMLFlowsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ListSAMLFlowsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "saml_flows", kind: "message", T: SAMLFlow, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSAMLFlowsResponse {
    return new ListSAMLFlowsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSAMLFlowsResponse {
    return new ListSAMLFlowsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSAMLFlowsResponse {
    return new ListSAMLFlowsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListSAMLFlowsResponse | PlainMessage<ListSAMLFlowsResponse> | undefined, b: ListSAMLFlowsResponse | PlainMessage<ListSAMLFlowsResponse> | undefined): boolean {
    return proto3.util.equals(ListSAMLFlowsResponse, a, b);
  }
}

/**
 * @generated from message ssoready.v1.GetSAMLFlowRequest
 */
export class GetSAMLFlowRequest extends Message<GetSAMLFlowRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetSAMLFlowRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.GetSAMLFlowRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLFlowRequest {
    return new GetSAMLFlowRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLFlowRequest {
    return new GetSAMLFlowRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLFlowRequest {
    return new GetSAMLFlowRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLFlowRequest | PlainMessage<GetSAMLFlowRequest> | undefined, b: GetSAMLFlowRequest | PlainMessage<GetSAMLFlowRequest> | undefined): boolean {
    return proto3.util.equals(GetSAMLFlowRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ParseSAMLMetadataRequest
 */
export class ParseSAMLMetadataRequest extends Message<ParseSAMLMetadataRequest> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<ParseSAMLMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ParseSAMLMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseSAMLMetadataRequest {
    return new ParseSAMLMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseSAMLMetadataRequest {
    return new ParseSAMLMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseSAMLMetadataRequest {
    return new ParseSAMLMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ParseSAMLMetadataRequest | PlainMessage<ParseSAMLMetadataRequest> | undefined, b: ParseSAMLMetadataRequest | PlainMessage<ParseSAMLMetadataRequest> | undefined): boolean {
    return proto3.util.equals(ParseSAMLMetadataRequest, a, b);
  }
}

/**
 * @generated from message ssoready.v1.ParseSAMLMetadataResponse
 */
export class ParseSAMLMetadataResponse extends Message<ParseSAMLMetadataResponse> {
  /**
   * @generated from field: string idp_redirect_url = 1;
   */
  idpRedirectUrl = "";

  /**
   * @generated from field: string idp_certificate = 2;
   */
  idpCertificate = "";

  /**
   * @generated from field: string idp_entity_id = 3;
   */
  idpEntityId = "";

  constructor(data?: PartialMessage<ParseSAMLMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ssoready.v1.ParseSAMLMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_certificate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "idp_entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParseSAMLMetadataResponse {
    return new ParseSAMLMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParseSAMLMetadataResponse {
    return new ParseSAMLMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParseSAMLMetadataResponse {
    return new ParseSAMLMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ParseSAMLMetadataResponse | PlainMessage<ParseSAMLMetadataResponse> | undefined, b: ParseSAMLMetadataResponse | PlainMessage<ParseSAMLMetadataResponse> | undefined): boolean {
    return proto3.util.equals(ParseSAMLMetadataResponse, a, b);
  }
}

