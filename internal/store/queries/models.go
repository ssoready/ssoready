// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package queries

import (
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type SamlFlowStatus string

const (
	SamlFlowStatusInProgress SamlFlowStatus = "in_progress"
	SamlFlowStatusFailed     SamlFlowStatus = "failed"
	SamlFlowStatusSucceeded  SamlFlowStatus = "succeeded"
)

func (e *SamlFlowStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = SamlFlowStatus(s)
	case string:
		*e = SamlFlowStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for SamlFlowStatus: %T", src)
	}
	return nil
}

type NullSamlFlowStatus struct {
	SamlFlowStatus SamlFlowStatus
	Valid          bool // Valid is true if SamlFlowStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSamlFlowStatus) Scan(value interface{}) error {
	if value == nil {
		ns.SamlFlowStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.SamlFlowStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSamlFlowStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.SamlFlowStatus), nil
}

type ScimRequestHttpMethod string

const (
	ScimRequestHttpMethodGet    ScimRequestHttpMethod = "get"
	ScimRequestHttpMethodPost   ScimRequestHttpMethod = "post"
	ScimRequestHttpMethodPut    ScimRequestHttpMethod = "put"
	ScimRequestHttpMethodPatch  ScimRequestHttpMethod = "patch"
	ScimRequestHttpMethodDelete ScimRequestHttpMethod = "delete"
)

func (e *ScimRequestHttpMethod) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ScimRequestHttpMethod(s)
	case string:
		*e = ScimRequestHttpMethod(s)
	default:
		return fmt.Errorf("unsupported scan type for ScimRequestHttpMethod: %T", src)
	}
	return nil
}

type NullScimRequestHttpMethod struct {
	ScimRequestHttpMethod ScimRequestHttpMethod
	Valid                 bool // Valid is true if ScimRequestHttpMethod is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullScimRequestHttpMethod) Scan(value interface{}) error {
	if value == nil {
		ns.ScimRequestHttpMethod, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ScimRequestHttpMethod.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullScimRequestHttpMethod) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ScimRequestHttpMethod), nil
}

type ScimRequestHttpStatus string

const (
	ScimRequestHttpStatus200 ScimRequestHttpStatus = "200"
	ScimRequestHttpStatus201 ScimRequestHttpStatus = "201"
	ScimRequestHttpStatus204 ScimRequestHttpStatus = "204"
	ScimRequestHttpStatus400 ScimRequestHttpStatus = "400"
	ScimRequestHttpStatus401 ScimRequestHttpStatus = "401"
	ScimRequestHttpStatus404 ScimRequestHttpStatus = "404"
)

func (e *ScimRequestHttpStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ScimRequestHttpStatus(s)
	case string:
		*e = ScimRequestHttpStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ScimRequestHttpStatus: %T", src)
	}
	return nil
}

type NullScimRequestHttpStatus struct {
	ScimRequestHttpStatus ScimRequestHttpStatus
	Valid                 bool // Valid is true if ScimRequestHttpStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullScimRequestHttpStatus) Scan(value interface{}) error {
	if value == nil {
		ns.ScimRequestHttpStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ScimRequestHttpStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullScimRequestHttpStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ScimRequestHttpStatus), nil
}

type AdminAccessToken struct {
	ID                 uuid.UUID
	OrganizationID     uuid.UUID
	OneTimeTokenSha256 []byte
	AccessTokenSha256  []byte
	CreateTime         time.Time
	ExpireTime         time.Time
	CanManageSaml      *bool
	CanManageScim      *bool
}

type ApiKey struct {
	ID                     uuid.UUID
	SecretValue            string
	EnvironmentID          uuid.UUID
	SecretValueSha256      []byte
	HasManagementApiAccess *bool
}

type AppOrganization struct {
	ID                    uuid.UUID
	GoogleHostedDomain    *string
	MicrosoftTenantID     *string
	EmailLoginsDisabled   *bool
	EntitledManagementApi *bool
	EntitledCustomDomains *bool
}

type AppSession struct {
	ID          uuid.UUID
	AppUserID   uuid.UUID
	CreateTime  time.Time
	ExpireTime  time.Time
	Token       string
	TokenSha256 []byte
	Revoked     *bool
}

type AppUser struct {
	ID                uuid.UUID
	AppOrganizationID uuid.UUID
	DisplayName       string
	Email             string
}

type EmailVerificationChallenge struct {
	ID           uuid.UUID
	Email        string
	ExpireTime   time.Time
	SecretToken  string
	CompleteTime *time.Time
}

type Environment struct {
	ID                   uuid.UUID
	RedirectUrl          *string
	AppOrganizationID    uuid.UUID
	DisplayName          *string
	AuthUrl              *string
	OauthRedirectUri     *string
	CustomAuthDomain     *string
	AdminApplicationName *string
	AdminReturnUrl       *string
	CustomAdminDomain    *string
	AdminUrl             *string
	AdminLogoConfigured  bool
}

type OnboardingState struct {
	AppOrganizationID          uuid.UUID
	DummyidpAppID              string
	OnboardingEnvironmentID    uuid.UUID
	OnboardingOrganizationID   uuid.UUID
	OnboardingSamlConnectionID uuid.UUID
}

type Organization struct {
	ID            uuid.UUID
	EnvironmentID uuid.UUID
	ExternalID    *string
}

type OrganizationDomain struct {
	ID             uuid.UUID
	OrganizationID uuid.UUID
	Domain         string
}

type SamlConnection struct {
	ID                 uuid.UUID
	OrganizationID     uuid.UUID
	IdpRedirectUrl     *string
	IdpX509Certificate []byte
	IdpEntityID        *string
	SpEntityID         string
	IsPrimary          bool
	SpAcsUrl           string
}

type SamlFlow struct {
	ID                                            uuid.UUID
	SamlConnectionID                              uuid.UUID
	AccessCode                                    *uuid.UUID
	State                                         string
	CreateTime                                    time.Time
	ExpireTime                                    time.Time
	Email                                         *string
	SubjectIdpAttributes                          []byte
	UpdateTime                                    time.Time
	AuthRedirectUrl                               *string
	GetRedirectTime                               *time.Time
	InitiateRequest                               *string
	InitiateTime                                  *time.Time
	Assertion                                     *string
	AppRedirectUrl                                *string
	ReceiveAssertionTime                          *time.Time
	RedeemTime                                    *time.Time
	RedeemResponse                                []byte
	ErrorBadIssuer                                *string
	ErrorBadAudience                              *string
	ErrorBadSubjectID                             *string
	ErrorEmailOutsideOrganizationDomains          *string
	Status                                        SamlFlowStatus
	ErrorUnsignedAssertion                        bool
	AccessCodeSha256                              []byte
	IsOauth                                       *bool
	ErrorBadSignatureAlgorithm                    *string
	ErrorBadDigestAlgorithm                       *string
	ErrorBadX509Certificate                       []byte
	ErrorSamlConnectionNotConfigured              bool
	ErrorEnvironmentOauthRedirectUriNotConfigured bool
	AssertionID                                   *string
}

type SamlOauthClient struct {
	ID                 uuid.UUID
	EnvironmentID      uuid.UUID
	ClientSecretSha256 []byte
}

type SchemaMigration struct {
	Version int64
	Dirty   bool
}

type ScimDirectory struct {
	ID                uuid.UUID
	OrganizationID    uuid.UUID
	ScimBaseUrl       string
	BearerTokenSha256 []byte
	IsPrimary         bool
}

type ScimGroup struct {
	ID              uuid.UUID
	ScimDirectoryID uuid.UUID
	DisplayName     string
	Deleted         bool
	Attributes      []byte
}

type ScimRequest struct {
	ID                                   uuid.UUID
	ScimDirectoryID                      uuid.UUID
	Timestamp                            time.Time
	HttpRequestUrl                       string
	HttpRequestMethod                    ScimRequestHttpMethod
	HttpRequestBody                      []byte
	HttpResponseStatus                   ScimRequestHttpStatus
	HttpResponseBody                     []byte
	ErrorBadBearerToken                  bool
	ErrorBadUsername                     *string
	ErrorEmailOutsideOrganizationDomains *string
}

type ScimUser struct {
	ID              uuid.UUID
	ScimDirectoryID uuid.UUID
	Email           string
	Deleted         bool
	Attributes      []byte
}

type ScimUserGroupMembership struct {
	ID              uuid.UUID
	ScimDirectoryID uuid.UUID
	ScimUserID      uuid.UUID
	ScimGroupID     uuid.UUID
}
