// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: ssoready/v1/ssoready.proto

package ssoreadyv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SAMLFlowStatus int32

const (
	SAMLFlowStatus_SAML_FLOW_STATUS_UNSPECIFIED SAMLFlowStatus = 0
	SAMLFlowStatus_SAML_FLOW_STATUS_IN_PROGRESS SAMLFlowStatus = 1
	SAMLFlowStatus_SAML_FLOW_STATUS_FAILED      SAMLFlowStatus = 2
	SAMLFlowStatus_SAML_FLOW_STATUS_SUCCEEDED   SAMLFlowStatus = 3
)

// Enum value maps for SAMLFlowStatus.
var (
	SAMLFlowStatus_name = map[int32]string{
		0: "SAML_FLOW_STATUS_UNSPECIFIED",
		1: "SAML_FLOW_STATUS_IN_PROGRESS",
		2: "SAML_FLOW_STATUS_FAILED",
		3: "SAML_FLOW_STATUS_SUCCEEDED",
	}
	SAMLFlowStatus_value = map[string]int32{
		"SAML_FLOW_STATUS_UNSPECIFIED": 0,
		"SAML_FLOW_STATUS_IN_PROGRESS": 1,
		"SAML_FLOW_STATUS_FAILED":      2,
		"SAML_FLOW_STATUS_SUCCEEDED":   3,
	}
)

func (x SAMLFlowStatus) Enum() *SAMLFlowStatus {
	p := new(SAMLFlowStatus)
	*p = x
	return p
}

func (x SAMLFlowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SAMLFlowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ssoready_v1_ssoready_proto_enumTypes[0].Descriptor()
}

func (SAMLFlowStatus) Type() protoreflect.EnumType {
	return &file_ssoready_v1_ssoready_proto_enumTypes[0]
}

func (x SAMLFlowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SAMLFlowStatus.Descriptor instead.
func (SAMLFlowStatus) EnumDescriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{0}
}

type AppUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *AppUser) Reset() {
	*x = AppUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUser) ProtoMessage() {}

func (x *AppUser) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUser.ProtoReflect.Descriptor instead.
func (*AppUser) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{0}
}

func (x *AppUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AppUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RedirectUrl      string `protobuf:"bytes,2,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	DisplayName      string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AuthUrl          string `protobuf:"bytes,4,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	OauthRedirectUri string `protobuf:"bytes,5,opt,name=oauth_redirect_uri,json=oauthRedirectUri,proto3" json:"oauth_redirect_uri,omitempty"`
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{1}
}

func (x *Environment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Environment) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *Environment) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Environment) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *Environment) GetOauthRedirectUri() string {
	if x != nil {
		return x.OauthRedirectUri
	}
	return ""
}

type APIKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId          string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	SecretToken            string `protobuf:"bytes,3,opt,name=secret_token,json=secretToken,proto3" json:"secret_token,omitempty"`
	HasManagementApiAccess bool   `protobuf:"varint,4,opt,name=has_management_api_access,json=hasManagementApiAccess,proto3" json:"has_management_api_access,omitempty"`
}

func (x *APIKey) Reset() {
	*x = APIKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKey) ProtoMessage() {}

func (x *APIKey) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKey.ProtoReflect.Descriptor instead.
func (*APIKey) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{2}
}

func (x *APIKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *APIKey) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *APIKey) GetSecretToken() string {
	if x != nil {
		return x.SecretToken
	}
	return ""
}

func (x *APIKey) GetHasManagementApiAccess() bool {
	if x != nil {
		return x.HasManagementApiAccess
	}
	return false
}

type SAMLOAuthClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	ClientSecret  string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *SAMLOAuthClient) Reset() {
	*x = SAMLOAuthClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAMLOAuthClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLOAuthClient) ProtoMessage() {}

func (x *SAMLOAuthClient) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLOAuthClient.ProtoReflect.Descriptor instead.
func (*SAMLOAuthClient) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{3}
}

func (x *SAMLOAuthClient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SAMLOAuthClient) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *SAMLOAuthClient) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this organization.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The environment this organization belongs to.
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// An identifier you can attach to an organization. Meant to be used to correlate an SSOReady organization to your
	// internal equivalent concept.
	//
	// External IDs are unique within an environment. No two organizations in the same environment can have
	// the same external ID.
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	// A list of domains that users from this organization use.
	//
	// SAML connections and SCIM directories within this organization will only produce users whose email are included in
	// `domains`. SSOReady will reject SAML and SCIM users that do not fall within `domains`.
	Domains []string `protobuf:"bytes,4,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{4}
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Organization) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Organization) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Organization) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type SAMLConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this SAML connection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The organization this SAML connection belongs to.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Whether this is the primary SAML connection for the organization.
	Primary bool `protobuf:"varint,8,opt,name=primary,proto3" json:"primary,omitempty"`
	// URL to redirect to when initiating SAML flows.
	//
	// IDP redirect URLs are assigned by an Identity Provider, and need to be inputted into SSOReady.
	IdpRedirectUrl string `protobuf:"bytes,3,opt,name=idp_redirect_url,json=idpRedirectUrl,proto3" json:"idp_redirect_url,omitempty"`
	// Certificate to authenticate SAML assertions. This is a PEM-encoded X.509 certificate.
	//
	// IDP certificates are assigned by an Identity Provider, and need to be inputted into SSOReady.
	IdpCertificate string `protobuf:"bytes,4,opt,name=idp_certificate,json=idpCertificate,proto3" json:"idp_certificate,omitempty"`
	// Identifier for the identity provider when handling SAML operations.
	//
	// IDP entity IDs are assigned by an Identity Provider, and need to be inputted into SSOReady.
	IdpEntityId string `protobuf:"bytes,5,opt,name=idp_entity_id,json=idpEntityId,proto3" json:"idp_entity_id,omitempty"`
	// Identifier for the SAML connection when handling SAML operations.
	//
	// SP entity IDs are assigned by SSOReady, and need to be inputted into your customer's Identity Provider.
	SpEntityId string `protobuf:"bytes,6,opt,name=sp_entity_id,json=spEntityId,proto3" json:"sp_entity_id,omitempty"`
	// URL the Identity Provider redirects to when transmitting SAML assertions. Stands for "Service Provider Assertion
	// Consumer Service" URL.
	//
	// SP ACS URLs are assigned by SSOReady, and need to be inputted into your customer's Identity Provider.
	SpAcsUrl string `protobuf:"bytes,7,opt,name=sp_acs_url,json=spAcsUrl,proto3" json:"sp_acs_url,omitempty"`
}

func (x *SAMLConnection) Reset() {
	*x = SAMLConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAMLConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLConnection) ProtoMessage() {}

func (x *SAMLConnection) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLConnection.ProtoReflect.Descriptor instead.
func (*SAMLConnection) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{5}
}

func (x *SAMLConnection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SAMLConnection) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SAMLConnection) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *SAMLConnection) GetIdpRedirectUrl() string {
	if x != nil {
		return x.IdpRedirectUrl
	}
	return ""
}

func (x *SAMLConnection) GetIdpCertificate() string {
	if x != nil {
		return x.IdpCertificate
	}
	return ""
}

func (x *SAMLConnection) GetIdpEntityId() string {
	if x != nil {
		return x.IdpEntityId
	}
	return ""
}

func (x *SAMLConnection) GetSpEntityId() string {
	if x != nil {
		return x.SpEntityId
	}
	return ""
}

func (x *SAMLConnection) GetSpAcsUrl() string {
	if x != nil {
		return x.SpAcsUrl
	}
	return ""
}

type SAMLFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SamlConnectionId string         `protobuf:"bytes,2,opt,name=saml_connection_id,json=samlConnectionId,proto3" json:"saml_connection_id,omitempty"`
	Status           SAMLFlowStatus `protobuf:"varint,17,opt,name=status,proto3,enum=ssoready.v1.SAMLFlowStatus" json:"status,omitempty"`
	// Types that are assignable to Error:
	//
	//	*SAMLFlow_UnsignedAssertion
	//	*SAMLFlow_BadIssuer
	//	*SAMLFlow_BadAudience
	//	*SAMLFlow_BadSubjectId
	//	*SAMLFlow_EmailOutsideOrganizationDomains
	Error                isSAMLFlow_Error       `protobuf_oneof:"error"`
	State                string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Email                string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Attributes           map[string]string      `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTime           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	AuthRedirectUrl      string                 `protobuf:"bytes,8,opt,name=auth_redirect_url,json=authRedirectUrl,proto3" json:"auth_redirect_url,omitempty"`
	GetRedirectTime      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=get_redirect_time,json=getRedirectTime,proto3" json:"get_redirect_time,omitempty"`
	InitiateRequest      string                 `protobuf:"bytes,10,opt,name=initiate_request,json=initiateRequest,proto3" json:"initiate_request,omitempty"`
	InitiateTime         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=initiate_time,json=initiateTime,proto3" json:"initiate_time,omitempty"`
	Assertion            string                 `protobuf:"bytes,12,opt,name=assertion,proto3" json:"assertion,omitempty"`
	AppRedirectUrl       string                 `protobuf:"bytes,13,opt,name=app_redirect_url,json=appRedirectUrl,proto3" json:"app_redirect_url,omitempty"`
	ReceiveAssertionTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=receive_assertion_time,json=receiveAssertionTime,proto3" json:"receive_assertion_time,omitempty"`
	RedeemTime           *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=redeem_time,json=redeemTime,proto3" json:"redeem_time,omitempty"`
	RedeemResponse       string                 `protobuf:"bytes,16,opt,name=redeem_response,json=redeemResponse,proto3" json:"redeem_response,omitempty"`
}

func (x *SAMLFlow) Reset() {
	*x = SAMLFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAMLFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLFlow) ProtoMessage() {}

func (x *SAMLFlow) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLFlow.ProtoReflect.Descriptor instead.
func (*SAMLFlow) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{6}
}

func (x *SAMLFlow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SAMLFlow) GetSamlConnectionId() string {
	if x != nil {
		return x.SamlConnectionId
	}
	return ""
}

func (x *SAMLFlow) GetStatus() SAMLFlowStatus {
	if x != nil {
		return x.Status
	}
	return SAMLFlowStatus_SAML_FLOW_STATUS_UNSPECIFIED
}

func (m *SAMLFlow) GetError() isSAMLFlow_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (x *SAMLFlow) GetUnsignedAssertion() *emptypb.Empty {
	if x, ok := x.GetError().(*SAMLFlow_UnsignedAssertion); ok {
		return x.UnsignedAssertion
	}
	return nil
}

func (x *SAMLFlow) GetBadIssuer() string {
	if x, ok := x.GetError().(*SAMLFlow_BadIssuer); ok {
		return x.BadIssuer
	}
	return ""
}

func (x *SAMLFlow) GetBadAudience() string {
	if x, ok := x.GetError().(*SAMLFlow_BadAudience); ok {
		return x.BadAudience
	}
	return ""
}

func (x *SAMLFlow) GetBadSubjectId() string {
	if x, ok := x.GetError().(*SAMLFlow_BadSubjectId); ok {
		return x.BadSubjectId
	}
	return ""
}

func (x *SAMLFlow) GetEmailOutsideOrganizationDomains() string {
	if x, ok := x.GetError().(*SAMLFlow_EmailOutsideOrganizationDomains); ok {
		return x.EmailOutsideOrganizationDomains
	}
	return ""
}

func (x *SAMLFlow) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SAMLFlow) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SAMLFlow) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *SAMLFlow) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SAMLFlow) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *SAMLFlow) GetAuthRedirectUrl() string {
	if x != nil {
		return x.AuthRedirectUrl
	}
	return ""
}

func (x *SAMLFlow) GetGetRedirectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GetRedirectTime
	}
	return nil
}

func (x *SAMLFlow) GetInitiateRequest() string {
	if x != nil {
		return x.InitiateRequest
	}
	return ""
}

func (x *SAMLFlow) GetInitiateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.InitiateTime
	}
	return nil
}

func (x *SAMLFlow) GetAssertion() string {
	if x != nil {
		return x.Assertion
	}
	return ""
}

func (x *SAMLFlow) GetAppRedirectUrl() string {
	if x != nil {
		return x.AppRedirectUrl
	}
	return ""
}

func (x *SAMLFlow) GetReceiveAssertionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceiveAssertionTime
	}
	return nil
}

func (x *SAMLFlow) GetRedeemTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RedeemTime
	}
	return nil
}

func (x *SAMLFlow) GetRedeemResponse() string {
	if x != nil {
		return x.RedeemResponse
	}
	return ""
}

type isSAMLFlow_Error interface {
	isSAMLFlow_Error()
}

type SAMLFlow_UnsignedAssertion struct {
	UnsignedAssertion *emptypb.Empty `protobuf:"bytes,22,opt,name=unsigned_assertion,json=unsignedAssertion,proto3,oneof"`
}

type SAMLFlow_BadIssuer struct {
	BadIssuer string `protobuf:"bytes,18,opt,name=bad_issuer,json=badIssuer,proto3,oneof"`
}

type SAMLFlow_BadAudience struct {
	BadAudience string `protobuf:"bytes,19,opt,name=bad_audience,json=badAudience,proto3,oneof"`
}

type SAMLFlow_BadSubjectId struct {
	BadSubjectId string `protobuf:"bytes,20,opt,name=bad_subject_id,json=badSubjectId,proto3,oneof"`
}

type SAMLFlow_EmailOutsideOrganizationDomains struct {
	EmailOutsideOrganizationDomains string `protobuf:"bytes,21,opt,name=email_outside_organization_domains,json=emailOutsideOrganizationDomains,proto3,oneof"`
}

func (*SAMLFlow_UnsignedAssertion) isSAMLFlow_Error() {}

func (*SAMLFlow_BadIssuer) isSAMLFlow_Error() {}

func (*SAMLFlow_BadAudience) isSAMLFlow_Error() {}

func (*SAMLFlow_BadSubjectId) isSAMLFlow_Error() {}

func (*SAMLFlow_EmailOutsideOrganizationDomains) isSAMLFlow_Error() {}

type SCIMDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this SCIM directory.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The organization this SCIM directory belongs to.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Whether this is the primary SCIM directory for the organization.
	Primary bool `protobuf:"varint,3,opt,name=primary,proto3" json:"primary,omitempty"`
	// Base URL the Identity Provider uses to perform SCIM HTTP requests.
	//
	// SCIM base URLs are assigned by SSOReady, and need to be inputted into your customer's Identity Provider.
	ScimBaseUrl string `protobuf:"bytes,4,opt,name=scim_base_url,json=scimBaseUrl,proto3" json:"scim_base_url,omitempty"`
	// Whether this SCIM directory has a bearer token assigned.
	//
	// SSOReady only stores a hash of the bearer token. To get a bearer token value, you must rotate this SCIM directory's
	// bearer token.
	HasClientBearerToken bool `protobuf:"varint,6,opt,name=has_client_bearer_token,json=hasClientBearerToken,proto3" json:"has_client_bearer_token,omitempty"`
}

func (x *SCIMDirectory) Reset() {
	*x = SCIMDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCIMDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMDirectory) ProtoMessage() {}

func (x *SCIMDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMDirectory.ProtoReflect.Descriptor instead.
func (*SCIMDirectory) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{7}
}

func (x *SCIMDirectory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SCIMDirectory) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SCIMDirectory) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *SCIMDirectory) GetScimBaseUrl() string {
	if x != nil {
		return x.ScimBaseUrl
	}
	return ""
}

func (x *SCIMDirectory) GetHasClientBearerToken() bool {
	if x != nil {
		return x.HasClientBearerToken
	}
	return false
}

type SCIMUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this SCIM user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// SCIM directory this SCIM user belongs to.
	ScimDirectoryId string `protobuf:"bytes,2,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
	// The SCIM user's email address.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Whether the SCIM user has been deleted or deprovisioned from its SCIM directory.
	Deleted bool `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Arbitrary, potentially nested, attributes the Identity Provider included about the user.
	//
	// Typically, these `attributes` are used to pass along the user's first/last name, or whether they should be
	// considered an admin within their company.
	Attributes *structpb.Struct `protobuf:"bytes,5,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *SCIMUser) Reset() {
	*x = SCIMUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCIMUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMUser) ProtoMessage() {}

func (x *SCIMUser) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMUser.ProtoReflect.Descriptor instead.
func (*SCIMUser) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{8}
}

func (x *SCIMUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SCIMUser) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

func (x *SCIMUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SCIMUser) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *SCIMUser) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type SCIMGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for this SCIM group.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// SCIM directory this SCIM group belongs to.
	ScimDirectoryId string `protobuf:"bytes,2,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
	// A human-friendly name for the SCIM group.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Whether the SCIM group has been deleted or deprovisioned from its SCIM directory.
	//
	// Identity Providers are inconsistent about reliably deleting SCIM groups. Many Identity Providers will deprovision
	// the users inside a group, but not the group itself. For this reason, it's typical to ignore this field until a
	// specific need arises.
	Deleted bool `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// Arbitrary, potentially nested, attributes the Identity Provider included about the group.
	//
	// Identity Providers are inconsistent about supporting sending custom attributes on groups. For this reason, it's
	// typical to not rely on them until a specific need arises.
	Attributes *structpb.Struct `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *SCIMGroup) Reset() {
	*x = SCIMGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCIMGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMGroup) ProtoMessage() {}

func (x *SCIMGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMGroup.ProtoReflect.Descriptor instead.
func (*SCIMGroup) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{9}
}

func (x *SCIMGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SCIMGroup) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

func (x *SCIMGroup) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *SCIMGroup) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *SCIMGroup) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type GetSAMLRedirectURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The SAML connection to start a SAML login for.
	//
	// One of `samlConnectionId`, `organizationId`, or `organizationExternalId` must be specified.
	SamlConnectionId string `protobuf:"bytes,1,opt,name=saml_connection_id,json=samlConnectionId,proto3" json:"saml_connection_id,omitempty"`
	// The ID of the organization to start a SAML login for.
	//
	// The primary SAML connection in this organization will be used for logins.
	//
	// One of `samlConnectionId`, `organizationId`, or `organizationExternalId` must be specified.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The `externalId` of the organization to start a SAML login for.
	//
	// The primary SAML connection in this organization will be used for logins.
	//
	// One of `samlConnectionId`, `organizationId`, or `organizationExternalId` must be specified.
	OrganizationExternalId string `protobuf:"bytes,3,opt,name=organization_external_id,json=organizationExternalId,proto3" json:"organization_external_id,omitempty"`
	// This string will be returned back to you when you redeem this login's SAML access code.
	//
	// You can do anything you like with this `state`, but the most common use-case is to keep track of where to redirect
	// your user back to after logging in with SAML.
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetSAMLRedirectURLRequest) Reset() {
	*x = GetSAMLRedirectURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSAMLRedirectURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSAMLRedirectURLRequest) ProtoMessage() {}

func (x *GetSAMLRedirectURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSAMLRedirectURLRequest.ProtoReflect.Descriptor instead.
func (*GetSAMLRedirectURLRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{10}
}

func (x *GetSAMLRedirectURLRequest) GetSamlConnectionId() string {
	if x != nil {
		return x.SamlConnectionId
	}
	return ""
}

func (x *GetSAMLRedirectURLRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetSAMLRedirectURLRequest) GetOrganizationExternalId() string {
	if x != nil {
		return x.OrganizationExternalId
	}
	return ""
}

func (x *GetSAMLRedirectURLRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GetSAMLRedirectURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Redirect your user to this URL to start a SAML login.
	RedirectUrl string `protobuf:"bytes,1,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *GetSAMLRedirectURLResponse) Reset() {
	*x = GetSAMLRedirectURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSAMLRedirectURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSAMLRedirectURLResponse) ProtoMessage() {}

func (x *GetSAMLRedirectURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSAMLRedirectURLResponse.ProtoReflect.Descriptor instead.
func (*GetSAMLRedirectURLResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{11}
}

func (x *GetSAMLRedirectURLResponse) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type RedeemSAMLAccessCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The SAML access code to redeem.
	SamlAccessCode string `protobuf:"bytes,1,opt,name=saml_access_code,json=samlAccessCode,proto3" json:"saml_access_code,omitempty"`
}

func (x *RedeemSAMLAccessCodeRequest) Reset() {
	*x = RedeemSAMLAccessCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemSAMLAccessCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemSAMLAccessCodeRequest) ProtoMessage() {}

func (x *RedeemSAMLAccessCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemSAMLAccessCodeRequest.ProtoReflect.Descriptor instead.
func (*RedeemSAMLAccessCodeRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{12}
}

func (x *RedeemSAMLAccessCodeRequest) GetSamlAccessCode() string {
	if x != nil {
		return x.SamlAccessCode
	}
	return ""
}

type RedeemSAMLAccessCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user's email address.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The `state` you provided when getting a SAML initiation URL, if any.
	//
	// If your user logged in to your product using Identity Provider-initiated SAML (e.g. they clicked on your app inside
	// their corporate Okta dashboard), then `state` will be empty.
	//
	// SSOReady validates the authenticity of non-empty `state` values. You do not need to implement your own CSRF on top
	// of it, but doing so anyway will have no bad consequences.
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// Arbitrary key-value pairs the Identity Provider included about the user.
	//
	// Typically, these `attributes` are used to pass along the user's first/last name, or whether they should be
	// considered an admin within their company.
	Attributes map[string]string `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The ID of the organization this user belongs to.
	OrganizationId string `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The `externalId`, if any, of the organization this user belongs to.
	OrganizationExternalId string `protobuf:"bytes,5,opt,name=organization_external_id,json=organizationExternalId,proto3" json:"organization_external_id,omitempty"`
	// A unique identifier of this particular SAML login. It is not a secret. You can safely log it.
	//
	// SSOReady maintains an audit log of every SAML login. Use this SAML flow ID to find this login in the audit logs.
	SamlFlowId string `protobuf:"bytes,6,opt,name=saml_flow_id,json=samlFlowId,proto3" json:"saml_flow_id,omitempty"`
}

func (x *RedeemSAMLAccessCodeResponse) Reset() {
	*x = RedeemSAMLAccessCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemSAMLAccessCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemSAMLAccessCodeResponse) ProtoMessage() {}

func (x *RedeemSAMLAccessCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemSAMLAccessCodeResponse.ProtoReflect.Descriptor instead.
func (*RedeemSAMLAccessCodeResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{13}
}

func (x *RedeemSAMLAccessCodeResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RedeemSAMLAccessCodeResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *RedeemSAMLAccessCodeResponse) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *RedeemSAMLAccessCodeResponse) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RedeemSAMLAccessCodeResponse) GetOrganizationExternalId() string {
	if x != nil {
		return x.OrganizationExternalId
	}
	return ""
}

func (x *RedeemSAMLAccessCodeResponse) GetSamlFlowId() string {
	if x != nil {
		return x.SamlFlowId
	}
	return ""
}

type ListSCIMUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The SCIM directory to list from.
	//
	// One of `scimDirectoryId`, `organizationId`, or `organizationExternalId` must be specified.
	ScimDirectoryId string `protobuf:"bytes,1,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
	// The ID of the organization to list from. The primary SCIM directory of this organization is used.
	//
	// One of `scimDirectoryId`, `organizationId`, or `organizationExternalId` must be specified.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The `externalId` of the organization to list from. The primary SCIM directory of this organization is used.
	//
	// One of `scimDirectoryId`, `organizationId`, or `organizationExternalId` must be specified.
	OrganizationExternalId string `protobuf:"bytes,3,opt,name=organization_external_id,json=organizationExternalId,proto3" json:"organization_external_id,omitempty"`
	// If specified, only users that are members of this SCIM group are returned.
	ScimGroupId string `protobuf:"bytes,4,opt,name=scim_group_id,json=scimGroupId,proto3" json:"scim_group_id,omitempty"`
	// Pagination token. Leave empty to get the first page of results.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSCIMUsersRequest) Reset() {
	*x = ListSCIMUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSCIMUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSCIMUsersRequest) ProtoMessage() {}

func (x *ListSCIMUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSCIMUsersRequest.ProtoReflect.Descriptor instead.
func (*ListSCIMUsersRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{14}
}

func (x *ListSCIMUsersRequest) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

func (x *ListSCIMUsersRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListSCIMUsersRequest) GetOrganizationExternalId() string {
	if x != nil {
		return x.OrganizationExternalId
	}
	return ""
}

func (x *ListSCIMUsersRequest) GetScimGroupId() string {
	if x != nil {
		return x.ScimGroupId
	}
	return ""
}

func (x *ListSCIMUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSCIMUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of SCIM users.
	ScimUsers []*SCIMUser `protobuf:"bytes,1,rep,name=scim_users,json=scimUsers,proto3" json:"scim_users,omitempty"`
	// Value to use as `pageToken` for the next page of data. Empty if there is no more data.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSCIMUsersResponse) Reset() {
	*x = ListSCIMUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSCIMUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSCIMUsersResponse) ProtoMessage() {}

func (x *ListSCIMUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSCIMUsersResponse.ProtoReflect.Descriptor instead.
func (*ListSCIMUsersResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{15}
}

func (x *ListSCIMUsersResponse) GetScimUsers() []*SCIMUser {
	if x != nil {
		return x.ScimUsers
	}
	return nil
}

func (x *ListSCIMUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetSCIMUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the SCIM user to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSCIMUserRequest) Reset() {
	*x = GetSCIMUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCIMUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCIMUserRequest) ProtoMessage() {}

func (x *GetSCIMUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCIMUserRequest.ProtoReflect.Descriptor instead.
func (*GetSCIMUserRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{16}
}

func (x *GetSCIMUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSCIMUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested SCIM user.
	ScimUser *SCIMUser `protobuf:"bytes,1,opt,name=scim_user,json=scimUser,proto3" json:"scim_user,omitempty"`
}

func (x *GetSCIMUserResponse) Reset() {
	*x = GetSCIMUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCIMUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCIMUserResponse) ProtoMessage() {}

func (x *GetSCIMUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCIMUserResponse.ProtoReflect.Descriptor instead.
func (*GetSCIMUserResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{17}
}

func (x *GetSCIMUserResponse) GetScimUser() *SCIMUser {
	if x != nil {
		return x.ScimUser
	}
	return nil
}

type ListSCIMGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The SCIM directory to list from.
	//
	// One of `scimDirectoryId`, `organizationId`, or `organizationExternalId` must be specified.
	ScimDirectoryId string `protobuf:"bytes,1,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
	// The ID of the organization to list from. The primary SCIM directory of this organization is used.
	//
	// One of `scimDirectoryId`, `organizationId`, or `organizationExternalId` must be specified.
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The `externalId` of the organization to list from. The primary SCIM directory of this organization is used.
	//
	// One of `scimDirectoryId`, `organizationId`, or `organizationExternalId` must be specified.
	OrganizationExternalId string `protobuf:"bytes,3,opt,name=organization_external_id,json=organizationExternalId,proto3" json:"organization_external_id,omitempty"`
	// Pagination token. Leave empty to get the first page of results.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSCIMGroupsRequest) Reset() {
	*x = ListSCIMGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSCIMGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSCIMGroupsRequest) ProtoMessage() {}

func (x *ListSCIMGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSCIMGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListSCIMGroupsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{18}
}

func (x *ListSCIMGroupsRequest) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

func (x *ListSCIMGroupsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListSCIMGroupsRequest) GetOrganizationExternalId() string {
	if x != nil {
		return x.OrganizationExternalId
	}
	return ""
}

func (x *ListSCIMGroupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSCIMGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of SCIM groups.
	ScimGroups []*SCIMGroup `protobuf:"bytes,1,rep,name=scim_groups,json=scimGroups,proto3" json:"scim_groups,omitempty"`
	// Value to use as `pageToken` for the next page of data. Empty if there is no more data.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSCIMGroupsResponse) Reset() {
	*x = ListSCIMGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSCIMGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSCIMGroupsResponse) ProtoMessage() {}

func (x *ListSCIMGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSCIMGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListSCIMGroupsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{19}
}

func (x *ListSCIMGroupsResponse) GetScimGroups() []*SCIMGroup {
	if x != nil {
		return x.ScimGroups
	}
	return nil
}

func (x *ListSCIMGroupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetSCIMGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the SCIM group to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSCIMGroupRequest) Reset() {
	*x = GetSCIMGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCIMGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCIMGroupRequest) ProtoMessage() {}

func (x *GetSCIMGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCIMGroupRequest.ProtoReflect.Descriptor instead.
func (*GetSCIMGroupRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{20}
}

func (x *GetSCIMGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSCIMGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested SCIM group.
	ScimGroup *SCIMGroup `protobuf:"bytes,1,opt,name=scim_group,json=scimGroup,proto3" json:"scim_group,omitempty"`
}

func (x *GetSCIMGroupResponse) Reset() {
	*x = GetSCIMGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCIMGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCIMGroupResponse) ProtoMessage() {}

func (x *GetSCIMGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCIMGroupResponse.ProtoReflect.Descriptor instead.
func (*GetSCIMGroupResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{21}
}

func (x *GetSCIMGroupResponse) GetScimGroup() *SCIMGroup {
	if x != nil {
		return x.ScimGroup
	}
	return nil
}

type ListOrganizationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pagination token. Leave empty to get the first page of results.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListOrganizationsRequest) Reset() {
	*x = ListOrganizationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsRequest) ProtoMessage() {}

func (x *ListOrganizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{22}
}

func (x *ListOrganizationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListOrganizationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of organizations.
	Organizations []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	// Value to use as `pageToken` for the next page of data. Empty if there is no more data.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListOrganizationsResponse) Reset() {
	*x = ListOrganizationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsResponse) ProtoMessage() {}

func (x *ListOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{23}
}

func (x *ListOrganizationsResponse) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *ListOrganizationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the organization to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOrganizationRequest) Reset() {
	*x = GetOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationRequest) ProtoMessage() {}

func (x *GetOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{24}
}

func (x *GetOrganizationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested organization.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *GetOrganizationResponse) Reset() {
	*x = GetOrganizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationResponse) ProtoMessage() {}

func (x *GetOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{25}
}

func (x *GetOrganizationResponse) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type CreateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *CreateOrganizationRequest) Reset() {
	*x = CreateOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationRequest) ProtoMessage() {}

func (x *CreateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{26}
}

func (x *CreateOrganizationRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type CreateOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created organization.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *CreateOrganizationResponse) Reset() {
	*x = CreateOrganizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationResponse) ProtoMessage() {}

func (x *CreateOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationResponse.ProtoReflect.Descriptor instead.
func (*CreateOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{27}
}

func (x *CreateOrganizationResponse) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type UpdateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the organization to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The updated organization.
	Organization *Organization `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *UpdateOrganizationRequest) Reset() {
	*x = UpdateOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationRequest) ProtoMessage() {}

func (x *UpdateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateOrganizationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOrganizationRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type UpdateOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated organization.
	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *UpdateOrganizationResponse) Reset() {
	*x = UpdateOrganizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationResponse) ProtoMessage() {}

func (x *UpdateOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateOrganizationResponse) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type CreateSetupURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The organization that the setup URL is for.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Whether the setup URL lets the user manage SAML connections.
	CanManageSaml bool `protobuf:"varint,2,opt,name=can_manage_saml,json=canManageSaml,proto3" json:"can_manage_saml,omitempty"`
	// Whether the setup URL lets the user manage SCIM directories.
	CanManageScim bool `protobuf:"varint,3,opt,name=can_manage_scim,json=canManageScim,proto3" json:"can_manage_scim,omitempty"`
}

func (x *CreateSetupURLRequest) Reset() {
	*x = CreateSetupURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSetupURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSetupURLRequest) ProtoMessage() {}

func (x *CreateSetupURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSetupURLRequest.ProtoReflect.Descriptor instead.
func (*CreateSetupURLRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{30}
}

func (x *CreateSetupURLRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateSetupURLRequest) GetCanManageSaml() bool {
	if x != nil {
		return x.CanManageSaml
	}
	return false
}

func (x *CreateSetupURLRequest) GetCanManageScim() bool {
	if x != nil {
		return x.CanManageScim
	}
	return false
}

type CreateSetupURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The one-time, short-lived self-serve setup URL.
	//
	// Do not log or store this URL. Because this URL is one-time, loading it yourself means your customer will not be
	// able to load it after you.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CreateSetupURLResponse) Reset() {
	*x = CreateSetupURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSetupURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSetupURLResponse) ProtoMessage() {}

func (x *CreateSetupURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSetupURLResponse.ProtoReflect.Descriptor instead.
func (*CreateSetupURLResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{31}
}

func (x *CreateSetupURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListSAMLConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The organization the SAML connections belong to.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Pagination token. Leave empty to get the first page of results.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSAMLConnectionsRequest) Reset() {
	*x = ListSAMLConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSAMLConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSAMLConnectionsRequest) ProtoMessage() {}

func (x *ListSAMLConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSAMLConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListSAMLConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{32}
}

func (x *ListSAMLConnectionsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListSAMLConnectionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSAMLConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of SAML connections.
	SamlConnections []*SAMLConnection `protobuf:"bytes,1,rep,name=saml_connections,json=samlConnections,proto3" json:"saml_connections,omitempty"`
	// Value to use as `pageToken` for the next page of data. Empty if there is no more data.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSAMLConnectionsResponse) Reset() {
	*x = ListSAMLConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSAMLConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSAMLConnectionsResponse) ProtoMessage() {}

func (x *ListSAMLConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSAMLConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListSAMLConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{33}
}

func (x *ListSAMLConnectionsResponse) GetSamlConnections() []*SAMLConnection {
	if x != nil {
		return x.SamlConnections
	}
	return nil
}

func (x *ListSAMLConnectionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the SAML connection to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSAMLConnectionRequest) Reset() {
	*x = GetSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSAMLConnectionRequest) ProtoMessage() {}

func (x *GetSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*GetSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{34}
}

func (x *GetSAMLConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSAMLConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested SAML connection.
	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *GetSAMLConnectionResponse) Reset() {
	*x = GetSAMLConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSAMLConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSAMLConnectionResponse) ProtoMessage() {}

func (x *GetSAMLConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSAMLConnectionResponse.ProtoReflect.Descriptor instead.
func (*GetSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{35}
}

func (x *GetSAMLConnectionResponse) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type CreateSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The SAML connection to create.
	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *CreateSAMLConnectionRequest) Reset() {
	*x = CreateSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSAMLConnectionRequest) ProtoMessage() {}

func (x *CreateSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*CreateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{36}
}

func (x *CreateSAMLConnectionRequest) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type CreateSAMLConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created SAML connection.
	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *CreateSAMLConnectionResponse) Reset() {
	*x = CreateSAMLConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSAMLConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSAMLConnectionResponse) ProtoMessage() {}

func (x *CreateSAMLConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSAMLConnectionResponse.ProtoReflect.Descriptor instead.
func (*CreateSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{37}
}

func (x *CreateSAMLConnectionResponse) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type UpdateSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the SAML connection to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The updated SAML connection.
	SamlConnection *SAMLConnection `protobuf:"bytes,2,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *UpdateSAMLConnectionRequest) Reset() {
	*x = UpdateSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSAMLConnectionRequest) ProtoMessage() {}

func (x *UpdateSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateSAMLConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSAMLConnectionRequest) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type UpdateSAMLConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated SAML connection.
	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *UpdateSAMLConnectionResponse) Reset() {
	*x = UpdateSAMLConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSAMLConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSAMLConnectionResponse) ProtoMessage() {}

func (x *UpdateSAMLConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSAMLConnectionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateSAMLConnectionResponse) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type ListSCIMDirectoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The organization the SCIM directories belong to.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Pagination token. Leave empty to get the first page of results.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSCIMDirectoriesRequest) Reset() {
	*x = ListSCIMDirectoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSCIMDirectoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSCIMDirectoriesRequest) ProtoMessage() {}

func (x *ListSCIMDirectoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSCIMDirectoriesRequest.ProtoReflect.Descriptor instead.
func (*ListSCIMDirectoriesRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{40}
}

func (x *ListSCIMDirectoriesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListSCIMDirectoriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSCIMDirectoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of SCIM directories.
	ScimDirectories []*SCIMDirectory `protobuf:"bytes,1,rep,name=scim_directories,json=scimDirectories,proto3" json:"scim_directories,omitempty"`
	// Value to use as `pageToken` for the next page of data. Empty if there is no more data.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSCIMDirectoriesResponse) Reset() {
	*x = ListSCIMDirectoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSCIMDirectoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSCIMDirectoriesResponse) ProtoMessage() {}

func (x *ListSCIMDirectoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSCIMDirectoriesResponse.ProtoReflect.Descriptor instead.
func (*ListSCIMDirectoriesResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{41}
}

func (x *ListSCIMDirectoriesResponse) GetScimDirectories() []*SCIMDirectory {
	if x != nil {
		return x.ScimDirectories
	}
	return nil
}

func (x *ListSCIMDirectoriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the SCIM directory.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSCIMDirectoryRequest) Reset() {
	*x = GetSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCIMDirectoryRequest) ProtoMessage() {}

func (x *GetSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*GetSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{42}
}

func (x *GetSCIMDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSCIMDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested SCIM directory.
	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *GetSCIMDirectoryResponse) Reset() {
	*x = GetSCIMDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSCIMDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSCIMDirectoryResponse) ProtoMessage() {}

func (x *GetSCIMDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSCIMDirectoryResponse.ProtoReflect.Descriptor instead.
func (*GetSCIMDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{43}
}

func (x *GetSCIMDirectoryResponse) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type CreateSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The SCIM directory to create.
	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *CreateSCIMDirectoryRequest) Reset() {
	*x = CreateSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSCIMDirectoryRequest) ProtoMessage() {}

func (x *CreateSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*CreateSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{44}
}

func (x *CreateSCIMDirectoryRequest) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type CreateSCIMDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated SCIM directory.
	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *CreateSCIMDirectoryResponse) Reset() {
	*x = CreateSCIMDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSCIMDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSCIMDirectoryResponse) ProtoMessage() {}

func (x *CreateSCIMDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSCIMDirectoryResponse.ProtoReflect.Descriptor instead.
func (*CreateSCIMDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{45}
}

func (x *CreateSCIMDirectoryResponse) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type UpdateSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the SCIM directory to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The updated SCIM directory.
	ScimDirectory *SCIMDirectory `protobuf:"bytes,2,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *UpdateSCIMDirectoryRequest) Reset() {
	*x = UpdateSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSCIMDirectoryRequest) ProtoMessage() {}

func (x *UpdateSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateSCIMDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSCIMDirectoryRequest) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type UpdateSCIMDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated SCIM directory.
	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *UpdateSCIMDirectoryResponse) Reset() {
	*x = UpdateSCIMDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSCIMDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSCIMDirectoryResponse) ProtoMessage() {}

func (x *UpdateSCIMDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSCIMDirectoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateSCIMDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateSCIMDirectoryResponse) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type RotateSCIMDirectoryBearerTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the SCIM directory whose bearer token to rotate.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RotateSCIMDirectoryBearerTokenRequest) Reset() {
	*x = RotateSCIMDirectoryBearerTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateSCIMDirectoryBearerTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateSCIMDirectoryBearerTokenRequest) ProtoMessage() {}

func (x *RotateSCIMDirectoryBearerTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateSCIMDirectoryBearerTokenRequest.ProtoReflect.Descriptor instead.
func (*RotateSCIMDirectoryBearerTokenRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{48}
}

func (x *RotateSCIMDirectoryBearerTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RotateSCIMDirectoryBearerTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The new, updated bearer token.
	//
	// Do not log or store this bearer token. It is an authentication token that your customer should securely input into
	// their Identity Provider.
	BearerToken string `protobuf:"bytes,1,opt,name=bearer_token,json=bearerToken,proto3" json:"bearer_token,omitempty"`
}

func (x *RotateSCIMDirectoryBearerTokenResponse) Reset() {
	*x = RotateSCIMDirectoryBearerTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateSCIMDirectoryBearerTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateSCIMDirectoryBearerTokenResponse) ProtoMessage() {}

func (x *RotateSCIMDirectoryBearerTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateSCIMDirectoryBearerTokenResponse.ProtoReflect.Descriptor instead.
func (*RotateSCIMDirectoryBearerTokenResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{49}
}

func (x *RotateSCIMDirectoryBearerTokenResponse) GetBearerToken() string {
	if x != nil {
		return x.BearerToken
	}
	return ""
}

type VerifyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *VerifyEmailRequest) Reset() {
	*x = VerifyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailRequest) ProtoMessage() {}

func (x *VerifyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{50}
}

func (x *VerifyEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoogleCredential string `protobuf:"bytes,1,opt,name=google_credential,json=googleCredential,proto3" json:"google_credential,omitempty"`
	EmailVerifyToken string `protobuf:"bytes,2,opt,name=email_verify_token,json=emailVerifyToken,proto3" json:"email_verify_token,omitempty"`
	MicrosoftCode    string `protobuf:"bytes,3,opt,name=microsoft_code,json=microsoftCode,proto3" json:"microsoft_code,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{51}
}

func (x *SignInRequest) GetGoogleCredential() string {
	if x != nil {
		return x.GoogleCredential
	}
	return ""
}

func (x *SignInRequest) GetEmailVerifyToken() string {
	if x != nil {
		return x.EmailVerifyToken
	}
	return ""
}

func (x *SignInRequest) GetMicrosoftCode() string {
	if x != nil {
		return x.MicrosoftCode
	}
	return ""
}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{52}
}

func (x *SignInResponse) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

type SignOutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutRequest) Reset() {
	*x = SignOutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutRequest) ProtoMessage() {}

func (x *SignOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutRequest.ProtoReflect.Descriptor instead.
func (*SignOutRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{53}
}

type SignOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutResponse) Reset() {
	*x = SignOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutResponse) ProtoMessage() {}

func (x *SignOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutResponse.ProtoReflect.Descriptor instead.
func (*SignOutResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{54}
}

type WhoamiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhoamiRequest) Reset() {
	*x = WhoamiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoamiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoamiRequest) ProtoMessage() {}

func (x *WhoamiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoamiRequest.ProtoReflect.Descriptor instead.
func (*WhoamiRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{55}
}

type WhoamiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppUserId   string `protobuf:"bytes,1,opt,name=app_user_id,json=appUserId,proto3" json:"app_user_id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *WhoamiResponse) Reset() {
	*x = WhoamiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoamiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoamiResponse) ProtoMessage() {}

func (x *WhoamiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoamiResponse.ProtoReflect.Descriptor instead.
func (*WhoamiResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{56}
}

func (x *WhoamiResponse) GetAppUserId() string {
	if x != nil {
		return x.AppUserId
	}
	return ""
}

func (x *WhoamiResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *WhoamiResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetOnboardingStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOnboardingStateRequest) Reset() {
	*x = GetOnboardingStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnboardingStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnboardingStateRequest) ProtoMessage() {}

func (x *GetOnboardingStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnboardingStateRequest.ProtoReflect.Descriptor instead.
func (*GetOnboardingStateRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{57}
}

type GetOnboardingStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DummyidpAppId              string `protobuf:"bytes,1,opt,name=dummyidp_app_id,json=dummyidpAppId,proto3" json:"dummyidp_app_id,omitempty"`
	OnboardingEnvironmentId    string `protobuf:"bytes,2,opt,name=onboarding_environment_id,json=onboardingEnvironmentId,proto3" json:"onboarding_environment_id,omitempty"`
	OnboardingOrganizationId   string `protobuf:"bytes,3,opt,name=onboarding_organization_id,json=onboardingOrganizationId,proto3" json:"onboarding_organization_id,omitempty"`
	OnboardingSamlConnectionId string `protobuf:"bytes,4,opt,name=onboarding_saml_connection_id,json=onboardingSamlConnectionId,proto3" json:"onboarding_saml_connection_id,omitempty"`
}

func (x *GetOnboardingStateResponse) Reset() {
	*x = GetOnboardingStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnboardingStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnboardingStateResponse) ProtoMessage() {}

func (x *GetOnboardingStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnboardingStateResponse.ProtoReflect.Descriptor instead.
func (*GetOnboardingStateResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{58}
}

func (x *GetOnboardingStateResponse) GetDummyidpAppId() string {
	if x != nil {
		return x.DummyidpAppId
	}
	return ""
}

func (x *GetOnboardingStateResponse) GetOnboardingEnvironmentId() string {
	if x != nil {
		return x.OnboardingEnvironmentId
	}
	return ""
}

func (x *GetOnboardingStateResponse) GetOnboardingOrganizationId() string {
	if x != nil {
		return x.OnboardingOrganizationId
	}
	return ""
}

func (x *GetOnboardingStateResponse) GetOnboardingSamlConnectionId() string {
	if x != nil {
		return x.OnboardingSamlConnectionId
	}
	return ""
}

type UpdateOnboardingStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DummyidpAppId              string `protobuf:"bytes,1,opt,name=dummyidp_app_id,json=dummyidpAppId,proto3" json:"dummyidp_app_id,omitempty"`
	OnboardingEnvironmentId    string `protobuf:"bytes,2,opt,name=onboarding_environment_id,json=onboardingEnvironmentId,proto3" json:"onboarding_environment_id,omitempty"`
	OnboardingOrganizationId   string `protobuf:"bytes,3,opt,name=onboarding_organization_id,json=onboardingOrganizationId,proto3" json:"onboarding_organization_id,omitempty"`
	OnboardingSamlConnectionId string `protobuf:"bytes,4,opt,name=onboarding_saml_connection_id,json=onboardingSamlConnectionId,proto3" json:"onboarding_saml_connection_id,omitempty"`
}

func (x *UpdateOnboardingStateRequest) Reset() {
	*x = UpdateOnboardingStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnboardingStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnboardingStateRequest) ProtoMessage() {}

func (x *UpdateOnboardingStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnboardingStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateOnboardingStateRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateOnboardingStateRequest) GetDummyidpAppId() string {
	if x != nil {
		return x.DummyidpAppId
	}
	return ""
}

func (x *UpdateOnboardingStateRequest) GetOnboardingEnvironmentId() string {
	if x != nil {
		return x.OnboardingEnvironmentId
	}
	return ""
}

func (x *UpdateOnboardingStateRequest) GetOnboardingOrganizationId() string {
	if x != nil {
		return x.OnboardingOrganizationId
	}
	return ""
}

func (x *UpdateOnboardingStateRequest) GetOnboardingSamlConnectionId() string {
	if x != nil {
		return x.OnboardingSamlConnectionId
	}
	return ""
}

type OnboardingGetSAMLRedirectURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeySecretToken string `protobuf:"bytes,1,opt,name=api_key_secret_token,json=apiKeySecretToken,proto3" json:"api_key_secret_token,omitempty"`
	SamlConnectionId  string `protobuf:"bytes,2,opt,name=saml_connection_id,json=samlConnectionId,proto3" json:"saml_connection_id,omitempty"`
}

func (x *OnboardingGetSAMLRedirectURLRequest) Reset() {
	*x = OnboardingGetSAMLRedirectURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardingGetSAMLRedirectURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingGetSAMLRedirectURLRequest) ProtoMessage() {}

func (x *OnboardingGetSAMLRedirectURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingGetSAMLRedirectURLRequest.ProtoReflect.Descriptor instead.
func (*OnboardingGetSAMLRedirectURLRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{60}
}

func (x *OnboardingGetSAMLRedirectURLRequest) GetApiKeySecretToken() string {
	if x != nil {
		return x.ApiKeySecretToken
	}
	return ""
}

func (x *OnboardingGetSAMLRedirectURLRequest) GetSamlConnectionId() string {
	if x != nil {
		return x.SamlConnectionId
	}
	return ""
}

type OnboardingRedeemSAMLAccessCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeySecretToken string `protobuf:"bytes,1,opt,name=api_key_secret_token,json=apiKeySecretToken,proto3" json:"api_key_secret_token,omitempty"`
	SamlAccessCode    string `protobuf:"bytes,2,opt,name=saml_access_code,json=samlAccessCode,proto3" json:"saml_access_code,omitempty"`
}

func (x *OnboardingRedeemSAMLAccessCodeRequest) Reset() {
	*x = OnboardingRedeemSAMLAccessCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardingRedeemSAMLAccessCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingRedeemSAMLAccessCodeRequest) ProtoMessage() {}

func (x *OnboardingRedeemSAMLAccessCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingRedeemSAMLAccessCodeRequest.ProtoReflect.Descriptor instead.
func (*OnboardingRedeemSAMLAccessCodeRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{61}
}

func (x *OnboardingRedeemSAMLAccessCodeRequest) GetApiKeySecretToken() string {
	if x != nil {
		return x.ApiKeySecretToken
	}
	return ""
}

func (x *OnboardingRedeemSAMLAccessCodeRequest) GetSamlAccessCode() string {
	if x != nil {
		return x.SamlAccessCode
	}
	return ""
}

type GetStripeCheckoutURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStripeCheckoutURLRequest) Reset() {
	*x = GetStripeCheckoutURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStripeCheckoutURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStripeCheckoutURLRequest) ProtoMessage() {}

func (x *GetStripeCheckoutURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStripeCheckoutURLRequest.ProtoReflect.Descriptor instead.
func (*GetStripeCheckoutURLRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{62}
}

type GetStripeCheckoutURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetStripeCheckoutURLResponse) Reset() {
	*x = GetStripeCheckoutURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStripeCheckoutURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStripeCheckoutURLResponse) ProtoMessage() {}

func (x *GetStripeCheckoutURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStripeCheckoutURLResponse.ProtoReflect.Descriptor instead.
func (*GetStripeCheckoutURLResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{63}
}

func (x *GetStripeCheckoutURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RedeemStripeCheckoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StripeCheckoutSessionId string `protobuf:"bytes,1,opt,name=stripe_checkout_session_id,json=stripeCheckoutSessionId,proto3" json:"stripe_checkout_session_id,omitempty"`
}

func (x *RedeemStripeCheckoutRequest) Reset() {
	*x = RedeemStripeCheckoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemStripeCheckoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemStripeCheckoutRequest) ProtoMessage() {}

func (x *RedeemStripeCheckoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemStripeCheckoutRequest.ProtoReflect.Descriptor instead.
func (*RedeemStripeCheckoutRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{64}
}

func (x *RedeemStripeCheckoutRequest) GetStripeCheckoutSessionId() string {
	if x != nil {
		return x.StripeCheckoutSessionId
	}
	return ""
}

type RedeemStripeCheckoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RedeemStripeCheckoutResponse) Reset() {
	*x = RedeemStripeCheckoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemStripeCheckoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemStripeCheckoutResponse) ProtoMessage() {}

func (x *RedeemStripeCheckoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemStripeCheckoutResponse.ProtoReflect.Descriptor instead.
func (*RedeemStripeCheckoutResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{65}
}

type GetStripeBillingPortalURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStripeBillingPortalURLRequest) Reset() {
	*x = GetStripeBillingPortalURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStripeBillingPortalURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStripeBillingPortalURLRequest) ProtoMessage() {}

func (x *GetStripeBillingPortalURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStripeBillingPortalURLRequest.ProtoReflect.Descriptor instead.
func (*GetStripeBillingPortalURLRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{66}
}

type GetStripeBillingPortalURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetStripeBillingPortalURLResponse) Reset() {
	*x = GetStripeBillingPortalURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStripeBillingPortalURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStripeBillingPortalURLResponse) ProtoMessage() {}

func (x *GetStripeBillingPortalURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStripeBillingPortalURLResponse.ProtoReflect.Descriptor instead.
func (*GetStripeBillingPortalURLResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{67}
}

func (x *GetStripeBillingPortalURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetAppOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAppOrganizationRequest) Reset() {
	*x = GetAppOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppOrganizationRequest) ProtoMessage() {}

func (x *GetAppOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppOrganizationRequest.ProtoReflect.Descriptor instead.
func (*GetAppOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{68}
}

type GetAppOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoogleHostedDomain    string `protobuf:"bytes,1,opt,name=google_hosted_domain,json=googleHostedDomain,proto3" json:"google_hosted_domain,omitempty"`
	EntitledManagementApi bool   `protobuf:"varint,2,opt,name=entitled_management_api,json=entitledManagementApi,proto3" json:"entitled_management_api,omitempty"`
	HasStripeCustomerId   bool   `protobuf:"varint,3,opt,name=has_stripe_customer_id,json=hasStripeCustomerId,proto3" json:"has_stripe_customer_id,omitempty"`
}

func (x *GetAppOrganizationResponse) Reset() {
	*x = GetAppOrganizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppOrganizationResponse) ProtoMessage() {}

func (x *GetAppOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppOrganizationResponse.ProtoReflect.Descriptor instead.
func (*GetAppOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{69}
}

func (x *GetAppOrganizationResponse) GetGoogleHostedDomain() string {
	if x != nil {
		return x.GoogleHostedDomain
	}
	return ""
}

func (x *GetAppOrganizationResponse) GetEntitledManagementApi() bool {
	if x != nil {
		return x.EntitledManagementApi
	}
	return false
}

func (x *GetAppOrganizationResponse) GetHasStripeCustomerId() bool {
	if x != nil {
		return x.HasStripeCustomerId
	}
	return false
}

type ListAppUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAppUsersRequest) Reset() {
	*x = ListAppUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppUsersRequest) ProtoMessage() {}

func (x *ListAppUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppUsersRequest.ProtoReflect.Descriptor instead.
func (*ListAppUsersRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{70}
}

type ListAppUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppUsers []*AppUser `protobuf:"bytes,1,rep,name=app_users,json=appUsers,proto3" json:"app_users,omitempty"`
}

func (x *ListAppUsersResponse) Reset() {
	*x = ListAppUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppUsersResponse) ProtoMessage() {}

func (x *ListAppUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppUsersResponse.ProtoReflect.Descriptor instead.
func (*ListAppUsersResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{71}
}

func (x *ListAppUsersResponse) GetAppUsers() []*AppUser {
	if x != nil {
		return x.AppUsers
	}
	return nil
}

type ListEnvironmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListEnvironmentsRequest) Reset() {
	*x = ListEnvironmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsRequest) ProtoMessage() {}

func (x *ListEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{72}
}

func (x *ListEnvironmentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListEnvironmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environments  []*Environment `protobuf:"bytes,1,rep,name=environments,proto3" json:"environments,omitempty"`
	NextPageToken string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListEnvironmentsResponse) Reset() {
	*x = ListEnvironmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsResponse) ProtoMessage() {}

func (x *ListEnvironmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsResponse.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{73}
}

func (x *ListEnvironmentsResponse) GetEnvironments() []*Environment {
	if x != nil {
		return x.Environments
	}
	return nil
}

func (x *ListEnvironmentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEnvironmentRequest) Reset() {
	*x = GetEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvironmentRequest) ProtoMessage() {}

func (x *GetEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{74}
}

func (x *GetEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *Environment `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *CreateEnvironmentRequest) Reset() {
	*x = CreateEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest) ProtoMessage() {}

func (x *CreateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{75}
}

func (x *CreateEnvironmentRequest) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type UpdateEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *Environment `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *UpdateEnvironmentRequest) Reset() {
	*x = UpdateEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvironmentRequest) ProtoMessage() {}

func (x *UpdateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateEnvironmentRequest) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

type ListAPIKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId string `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListAPIKeysRequest) Reset() {
	*x = ListAPIKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIKeysRequest) ProtoMessage() {}

func (x *ListAPIKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIKeysRequest.ProtoReflect.Descriptor instead.
func (*ListAPIKeysRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{77}
}

func (x *ListAPIKeysRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ListAPIKeysRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListAPIKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeys       []*APIKey `protobuf:"bytes,1,rep,name=api_keys,json=apiKeys,proto3" json:"api_keys,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAPIKeysResponse) Reset() {
	*x = ListAPIKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIKeysResponse) ProtoMessage() {}

func (x *ListAPIKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIKeysResponse.ProtoReflect.Descriptor instead.
func (*ListAPIKeysResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{78}
}

func (x *ListAPIKeysResponse) GetApiKeys() []*APIKey {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *ListAPIKeysResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAPIKeyRequest) Reset() {
	*x = GetAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyRequest) ProtoMessage() {}

func (x *GetAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{79}
}

func (x *GetAPIKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey *APIKey `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *CreateAPIKeyRequest) Reset() {
	*x = CreateAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyRequest) ProtoMessage() {}

func (x *CreateAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{80}
}

func (x *CreateAPIKeyRequest) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type DeleteAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAPIKeyRequest) Reset() {
	*x = DeleteAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPIKeyRequest) ProtoMessage() {}

func (x *DeleteAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{81}
}

func (x *DeleteAPIKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListSAMLOAuthClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId string `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListSAMLOAuthClientsRequest) Reset() {
	*x = ListSAMLOAuthClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSAMLOAuthClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSAMLOAuthClientsRequest) ProtoMessage() {}

func (x *ListSAMLOAuthClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSAMLOAuthClientsRequest.ProtoReflect.Descriptor instead.
func (*ListSAMLOAuthClientsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{82}
}

func (x *ListSAMLOAuthClientsRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ListSAMLOAuthClientsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSAMLOAuthClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlOauthClients []*SAMLOAuthClient `protobuf:"bytes,1,rep,name=saml_oauth_clients,json=samlOauthClients,proto3" json:"saml_oauth_clients,omitempty"`
	NextPageToken    string             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSAMLOAuthClientsResponse) Reset() {
	*x = ListSAMLOAuthClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSAMLOAuthClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSAMLOAuthClientsResponse) ProtoMessage() {}

func (x *ListSAMLOAuthClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSAMLOAuthClientsResponse.ProtoReflect.Descriptor instead.
func (*ListSAMLOAuthClientsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{83}
}

func (x *ListSAMLOAuthClientsResponse) GetSamlOauthClients() []*SAMLOAuthClient {
	if x != nil {
		return x.SamlOauthClients
	}
	return nil
}

func (x *ListSAMLOAuthClientsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetSAMLOAuthClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSAMLOAuthClientRequest) Reset() {
	*x = GetSAMLOAuthClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSAMLOAuthClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSAMLOAuthClientRequest) ProtoMessage() {}

func (x *GetSAMLOAuthClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSAMLOAuthClientRequest.ProtoReflect.Descriptor instead.
func (*GetSAMLOAuthClientRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{84}
}

func (x *GetSAMLOAuthClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateSAMLOAuthClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlOauthClient *SAMLOAuthClient `protobuf:"bytes,1,opt,name=saml_oauth_client,json=samlOauthClient,proto3" json:"saml_oauth_client,omitempty"`
}

func (x *CreateSAMLOAuthClientRequest) Reset() {
	*x = CreateSAMLOAuthClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSAMLOAuthClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSAMLOAuthClientRequest) ProtoMessage() {}

func (x *CreateSAMLOAuthClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSAMLOAuthClientRequest.ProtoReflect.Descriptor instead.
func (*CreateSAMLOAuthClientRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{85}
}

func (x *CreateSAMLOAuthClientRequest) GetSamlOauthClient() *SAMLOAuthClient {
	if x != nil {
		return x.SamlOauthClient
	}
	return nil
}

type DeleteSAMLOAuthClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSAMLOAuthClientRequest) Reset() {
	*x = DeleteSAMLOAuthClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSAMLOAuthClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSAMLOAuthClientRequest) ProtoMessage() {}

func (x *DeleteSAMLOAuthClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSAMLOAuthClientRequest.ProtoReflect.Descriptor instead.
func (*DeleteSAMLOAuthClientRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{86}
}

func (x *DeleteSAMLOAuthClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppListOrganizationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId string `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *AppListOrganizationsRequest) Reset() {
	*x = AppListOrganizationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListOrganizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListOrganizationsRequest) ProtoMessage() {}

func (x *AppListOrganizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListOrganizationsRequest.ProtoReflect.Descriptor instead.
func (*AppListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{87}
}

func (x *AppListOrganizationsRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *AppListOrganizationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AppListOrganizationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AppListOrganizationsResponse) Reset() {
	*x = AppListOrganizationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListOrganizationsResponse) ProtoMessage() {}

func (x *AppListOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*AppListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{88}
}

func (x *AppListOrganizationsResponse) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *AppListOrganizationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AppGetOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppGetOrganizationRequest) Reset() {
	*x = AppGetOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetOrganizationRequest) ProtoMessage() {}

func (x *AppGetOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetOrganizationRequest.ProtoReflect.Descriptor instead.
func (*AppGetOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{89}
}

func (x *AppGetOrganizationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppCreateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *AppCreateOrganizationRequest) Reset() {
	*x = AppCreateOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCreateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCreateOrganizationRequest) ProtoMessage() {}

func (x *AppCreateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCreateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*AppCreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{90}
}

func (x *AppCreateOrganizationRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type AppUpdateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *AppUpdateOrganizationRequest) Reset() {
	*x = AppUpdateOrganizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUpdateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUpdateOrganizationRequest) ProtoMessage() {}

func (x *AppUpdateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUpdateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*AppUpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{91}
}

func (x *AppUpdateOrganizationRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type AppCreateAdminSetupURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	CanManageSaml  bool   `protobuf:"varint,2,opt,name=can_manage_saml,json=canManageSaml,proto3" json:"can_manage_saml,omitempty"`
	CanManageScim  bool   `protobuf:"varint,3,opt,name=can_manage_scim,json=canManageScim,proto3" json:"can_manage_scim,omitempty"`
}

func (x *AppCreateAdminSetupURLRequest) Reset() {
	*x = AppCreateAdminSetupURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCreateAdminSetupURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCreateAdminSetupURLRequest) ProtoMessage() {}

func (x *AppCreateAdminSetupURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCreateAdminSetupURLRequest.ProtoReflect.Descriptor instead.
func (*AppCreateAdminSetupURLRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{92}
}

func (x *AppCreateAdminSetupURLRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AppCreateAdminSetupURLRequest) GetCanManageSaml() bool {
	if x != nil {
		return x.CanManageSaml
	}
	return false
}

func (x *AppCreateAdminSetupURLRequest) GetCanManageScim() bool {
	if x != nil {
		return x.CanManageScim
	}
	return false
}

type AppCreateAdminSetupURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AppCreateAdminSetupURLResponse) Reset() {
	*x = AppCreateAdminSetupURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCreateAdminSetupURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCreateAdminSetupURLResponse) ProtoMessage() {}

func (x *AppCreateAdminSetupURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCreateAdminSetupURLResponse.ProtoReflect.Descriptor instead.
func (*AppCreateAdminSetupURLResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{93}
}

func (x *AppCreateAdminSetupURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AppListSAMLConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	PageToken      string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *AppListSAMLConnectionsRequest) Reset() {
	*x = AppListSAMLConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSAMLConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSAMLConnectionsRequest) ProtoMessage() {}

func (x *AppListSAMLConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSAMLConnectionsRequest.ProtoReflect.Descriptor instead.
func (*AppListSAMLConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{94}
}

func (x *AppListSAMLConnectionsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AppListSAMLConnectionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AppListSAMLConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnections []*SAMLConnection `protobuf:"bytes,1,rep,name=saml_connections,json=samlConnections,proto3" json:"saml_connections,omitempty"`
	NextPageToken   string            `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AppListSAMLConnectionsResponse) Reset() {
	*x = AppListSAMLConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSAMLConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSAMLConnectionsResponse) ProtoMessage() {}

func (x *AppListSAMLConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSAMLConnectionsResponse.ProtoReflect.Descriptor instead.
func (*AppListSAMLConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{95}
}

func (x *AppListSAMLConnectionsResponse) GetSamlConnections() []*SAMLConnection {
	if x != nil {
		return x.SamlConnections
	}
	return nil
}

func (x *AppListSAMLConnectionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AppGetSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppGetSAMLConnectionRequest) Reset() {
	*x = AppGetSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetSAMLConnectionRequest) ProtoMessage() {}

func (x *AppGetSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*AppGetSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{96}
}

func (x *AppGetSAMLConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppCreateSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AppCreateSAMLConnectionRequest) Reset() {
	*x = AppCreateSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCreateSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCreateSAMLConnectionRequest) ProtoMessage() {}

func (x *AppCreateSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCreateSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*AppCreateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{97}
}

func (x *AppCreateSAMLConnectionRequest) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AppUpdateSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AppUpdateSAMLConnectionRequest) Reset() {
	*x = AppUpdateSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUpdateSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUpdateSAMLConnectionRequest) ProtoMessage() {}

func (x *AppUpdateSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUpdateSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*AppUpdateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{98}
}

func (x *AppUpdateSAMLConnectionRequest) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AppListSAMLFlowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnectionId string `protobuf:"bytes,1,opt,name=saml_connection_id,json=samlConnectionId,proto3" json:"saml_connection_id,omitempty"`
	PageToken        string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *AppListSAMLFlowsRequest) Reset() {
	*x = AppListSAMLFlowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSAMLFlowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSAMLFlowsRequest) ProtoMessage() {}

func (x *AppListSAMLFlowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSAMLFlowsRequest.ProtoReflect.Descriptor instead.
func (*AppListSAMLFlowsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{99}
}

func (x *AppListSAMLFlowsRequest) GetSamlConnectionId() string {
	if x != nil {
		return x.SamlConnectionId
	}
	return ""
}

func (x *AppListSAMLFlowsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AppListSAMLFlowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlFlows     []*SAMLFlow `protobuf:"bytes,1,rep,name=saml_flows,json=samlFlows,proto3" json:"saml_flows,omitempty"`
	NextPageToken string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AppListSAMLFlowsResponse) Reset() {
	*x = AppListSAMLFlowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSAMLFlowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSAMLFlowsResponse) ProtoMessage() {}

func (x *AppListSAMLFlowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSAMLFlowsResponse.ProtoReflect.Descriptor instead.
func (*AppListSAMLFlowsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{100}
}

func (x *AppListSAMLFlowsResponse) GetSamlFlows() []*SAMLFlow {
	if x != nil {
		return x.SamlFlows
	}
	return nil
}

func (x *AppListSAMLFlowsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AppGetSAMLFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppGetSAMLFlowRequest) Reset() {
	*x = AppGetSAMLFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetSAMLFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetSAMLFlowRequest) ProtoMessage() {}

func (x *AppGetSAMLFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetSAMLFlowRequest.ProtoReflect.Descriptor instead.
func (*AppGetSAMLFlowRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{101}
}

func (x *AppGetSAMLFlowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ParseSAMLMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ParseSAMLMetadataRequest) Reset() {
	*x = ParseSAMLMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseSAMLMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseSAMLMetadataRequest) ProtoMessage() {}

func (x *ParseSAMLMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseSAMLMetadataRequest.ProtoReflect.Descriptor instead.
func (*ParseSAMLMetadataRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{102}
}

func (x *ParseSAMLMetadataRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ParseSAMLMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpRedirectUrl string `protobuf:"bytes,1,opt,name=idp_redirect_url,json=idpRedirectUrl,proto3" json:"idp_redirect_url,omitempty"`
	IdpCertificate string `protobuf:"bytes,2,opt,name=idp_certificate,json=idpCertificate,proto3" json:"idp_certificate,omitempty"`
	IdpEntityId    string `protobuf:"bytes,3,opt,name=idp_entity_id,json=idpEntityId,proto3" json:"idp_entity_id,omitempty"`
}

func (x *ParseSAMLMetadataResponse) Reset() {
	*x = ParseSAMLMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseSAMLMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseSAMLMetadataResponse) ProtoMessage() {}

func (x *ParseSAMLMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseSAMLMetadataResponse.ProtoReflect.Descriptor instead.
func (*ParseSAMLMetadataResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{103}
}

func (x *ParseSAMLMetadataResponse) GetIdpRedirectUrl() string {
	if x != nil {
		return x.IdpRedirectUrl
	}
	return ""
}

func (x *ParseSAMLMetadataResponse) GetIdpCertificate() string {
	if x != nil {
		return x.IdpCertificate
	}
	return ""
}

func (x *ParseSAMLMetadataResponse) GetIdpEntityId() string {
	if x != nil {
		return x.IdpEntityId
	}
	return ""
}

type AppListSCIMDirectoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	PageToken      string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *AppListSCIMDirectoriesRequest) Reset() {
	*x = AppListSCIMDirectoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSCIMDirectoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSCIMDirectoriesRequest) ProtoMessage() {}

func (x *AppListSCIMDirectoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSCIMDirectoriesRequest.ProtoReflect.Descriptor instead.
func (*AppListSCIMDirectoriesRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{104}
}

func (x *AppListSCIMDirectoriesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AppListSCIMDirectoriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AppListSCIMDirectoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectories []*SCIMDirectory `protobuf:"bytes,1,rep,name=scim_directories,json=scimDirectories,proto3" json:"scim_directories,omitempty"`
	NextPageToken   string           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AppListSCIMDirectoriesResponse) Reset() {
	*x = AppListSCIMDirectoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSCIMDirectoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSCIMDirectoriesResponse) ProtoMessage() {}

func (x *AppListSCIMDirectoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSCIMDirectoriesResponse.ProtoReflect.Descriptor instead.
func (*AppListSCIMDirectoriesResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{105}
}

func (x *AppListSCIMDirectoriesResponse) GetScimDirectories() []*SCIMDirectory {
	if x != nil {
		return x.ScimDirectories
	}
	return nil
}

func (x *AppListSCIMDirectoriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AppGetSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppGetSCIMDirectoryRequest) Reset() {
	*x = AppGetSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetSCIMDirectoryRequest) ProtoMessage() {}

func (x *AppGetSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AppGetSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{106}
}

func (x *AppGetSCIMDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppCreateSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AppCreateSCIMDirectoryRequest) Reset() {
	*x = AppCreateSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCreateSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCreateSCIMDirectoryRequest) ProtoMessage() {}

func (x *AppCreateSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCreateSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AppCreateSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{107}
}

func (x *AppCreateSCIMDirectoryRequest) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AppUpdateSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AppUpdateSCIMDirectoryRequest) Reset() {
	*x = AppUpdateSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUpdateSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUpdateSCIMDirectoryRequest) ProtoMessage() {}

func (x *AppUpdateSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUpdateSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AppUpdateSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{108}
}

func (x *AppUpdateSCIMDirectoryRequest) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AppRotateSCIMDirectoryBearerTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectoryId string `protobuf:"bytes,1,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
}

func (x *AppRotateSCIMDirectoryBearerTokenRequest) Reset() {
	*x = AppRotateSCIMDirectoryBearerTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRotateSCIMDirectoryBearerTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRotateSCIMDirectoryBearerTokenRequest) ProtoMessage() {}

func (x *AppRotateSCIMDirectoryBearerTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRotateSCIMDirectoryBearerTokenRequest.ProtoReflect.Descriptor instead.
func (*AppRotateSCIMDirectoryBearerTokenRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{109}
}

func (x *AppRotateSCIMDirectoryBearerTokenRequest) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

type AppRotateSCIMDirectoryBearerTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BearerToken string `protobuf:"bytes,1,opt,name=bearer_token,json=bearerToken,proto3" json:"bearer_token,omitempty"`
}

func (x *AppRotateSCIMDirectoryBearerTokenResponse) Reset() {
	*x = AppRotateSCIMDirectoryBearerTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRotateSCIMDirectoryBearerTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRotateSCIMDirectoryBearerTokenResponse) ProtoMessage() {}

func (x *AppRotateSCIMDirectoryBearerTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRotateSCIMDirectoryBearerTokenResponse.ProtoReflect.Descriptor instead.
func (*AppRotateSCIMDirectoryBearerTokenResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{110}
}

func (x *AppRotateSCIMDirectoryBearerTokenResponse) GetBearerToken() string {
	if x != nil {
		return x.BearerToken
	}
	return ""
}

type AppListSCIMUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectoryId string `protobuf:"bytes,1,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
	PageToken       string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	ScimGroupId     string `protobuf:"bytes,3,opt,name=scim_group_id,json=scimGroupId,proto3" json:"scim_group_id,omitempty"`
}

func (x *AppListSCIMUsersRequest) Reset() {
	*x = AppListSCIMUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSCIMUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSCIMUsersRequest) ProtoMessage() {}

func (x *AppListSCIMUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSCIMUsersRequest.ProtoReflect.Descriptor instead.
func (*AppListSCIMUsersRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{111}
}

func (x *AppListSCIMUsersRequest) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

func (x *AppListSCIMUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *AppListSCIMUsersRequest) GetScimGroupId() string {
	if x != nil {
		return x.ScimGroupId
	}
	return ""
}

type AppListSCIMUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimUsers     []*SCIMUser `protobuf:"bytes,1,rep,name=scim_users,json=scimUsers,proto3" json:"scim_users,omitempty"`
	NextPageToken string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AppListSCIMUsersResponse) Reset() {
	*x = AppListSCIMUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSCIMUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSCIMUsersResponse) ProtoMessage() {}

func (x *AppListSCIMUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSCIMUsersResponse.ProtoReflect.Descriptor instead.
func (*AppListSCIMUsersResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{112}
}

func (x *AppListSCIMUsersResponse) GetScimUsers() []*SCIMUser {
	if x != nil {
		return x.ScimUsers
	}
	return nil
}

func (x *AppListSCIMUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AppGetSCIMUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppGetSCIMUserRequest) Reset() {
	*x = AppGetSCIMUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetSCIMUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetSCIMUserRequest) ProtoMessage() {}

func (x *AppGetSCIMUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetSCIMUserRequest.ProtoReflect.Descriptor instead.
func (*AppGetSCIMUserRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{113}
}

func (x *AppGetSCIMUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppListSCIMGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectoryId string `protobuf:"bytes,1,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
	PageToken       string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	ScimUserId      string `protobuf:"bytes,3,opt,name=scim_user_id,json=scimUserId,proto3" json:"scim_user_id,omitempty"`
}

func (x *AppListSCIMGroupsRequest) Reset() {
	*x = AppListSCIMGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSCIMGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSCIMGroupsRequest) ProtoMessage() {}

func (x *AppListSCIMGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSCIMGroupsRequest.ProtoReflect.Descriptor instead.
func (*AppListSCIMGroupsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{114}
}

func (x *AppListSCIMGroupsRequest) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

func (x *AppListSCIMGroupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *AppListSCIMGroupsRequest) GetScimUserId() string {
	if x != nil {
		return x.ScimUserId
	}
	return ""
}

type AppGetSCIMGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppGetSCIMGroupRequest) Reset() {
	*x = AppGetSCIMGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppGetSCIMGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppGetSCIMGroupRequest) ProtoMessage() {}

func (x *AppGetSCIMGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppGetSCIMGroupRequest.ProtoReflect.Descriptor instead.
func (*AppGetSCIMGroupRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{115}
}

func (x *AppGetSCIMGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AppListSCIMGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimGroups    []*SCIMGroup `protobuf:"bytes,1,rep,name=scim_groups,json=scimGroups,proto3" json:"scim_groups,omitempty"`
	NextPageToken string       `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AppListSCIMGroupsResponse) Reset() {
	*x = AppListSCIMGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSCIMGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSCIMGroupsResponse) ProtoMessage() {}

func (x *AppListSCIMGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSCIMGroupsResponse.ProtoReflect.Descriptor instead.
func (*AppListSCIMGroupsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{116}
}

func (x *AppListSCIMGroupsResponse) GetScimGroups() []*SCIMGroup {
	if x != nil {
		return x.ScimGroups
	}
	return nil
}

func (x *AppListSCIMGroupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AdminRedeemOneTimeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneTimeToken string `protobuf:"bytes,1,opt,name=one_time_token,json=oneTimeToken,proto3" json:"one_time_token,omitempty"`
}

func (x *AdminRedeemOneTimeTokenRequest) Reset() {
	*x = AdminRedeemOneTimeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRedeemOneTimeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRedeemOneTimeTokenRequest) ProtoMessage() {}

func (x *AdminRedeemOneTimeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRedeemOneTimeTokenRequest.ProtoReflect.Descriptor instead.
func (*AdminRedeemOneTimeTokenRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{117}
}

func (x *AdminRedeemOneTimeTokenRequest) GetOneTimeToken() string {
	if x != nil {
		return x.OneTimeToken
	}
	return ""
}

type AdminRedeemOneTimeTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminSessionToken string `protobuf:"bytes,1,opt,name=admin_session_token,json=adminSessionToken,proto3" json:"admin_session_token,omitempty"`
}

func (x *AdminRedeemOneTimeTokenResponse) Reset() {
	*x = AdminRedeemOneTimeTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRedeemOneTimeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRedeemOneTimeTokenResponse) ProtoMessage() {}

func (x *AdminRedeemOneTimeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRedeemOneTimeTokenResponse.ProtoReflect.Descriptor instead.
func (*AdminRedeemOneTimeTokenResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{118}
}

func (x *AdminRedeemOneTimeTokenResponse) GetAdminSessionToken() string {
	if x != nil {
		return x.AdminSessionToken
	}
	return ""
}

type AdminWhoamiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdminWhoamiRequest) Reset() {
	*x = AdminWhoamiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminWhoamiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminWhoamiRequest) ProtoMessage() {}

func (x *AdminWhoamiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminWhoamiRequest.ProtoReflect.Descriptor instead.
func (*AdminWhoamiRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{119}
}

type AdminWhoamiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanManageSaml bool `protobuf:"varint,1,opt,name=can_manage_saml,json=canManageSaml,proto3" json:"can_manage_saml,omitempty"`
	CanManageScim bool `protobuf:"varint,2,opt,name=can_manage_scim,json=canManageScim,proto3" json:"can_manage_scim,omitempty"`
}

func (x *AdminWhoamiResponse) Reset() {
	*x = AdminWhoamiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminWhoamiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminWhoamiResponse) ProtoMessage() {}

func (x *AdminWhoamiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminWhoamiResponse.ProtoReflect.Descriptor instead.
func (*AdminWhoamiResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{120}
}

func (x *AdminWhoamiResponse) GetCanManageSaml() bool {
	if x != nil {
		return x.CanManageSaml
	}
	return false
}

func (x *AdminWhoamiResponse) GetCanManageScim() bool {
	if x != nil {
		return x.CanManageScim
	}
	return false
}

type AdminListSAMLConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *AdminListSAMLConnectionsRequest) Reset() {
	*x = AdminListSAMLConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListSAMLConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListSAMLConnectionsRequest) ProtoMessage() {}

func (x *AdminListSAMLConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListSAMLConnectionsRequest.ProtoReflect.Descriptor instead.
func (*AdminListSAMLConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{121}
}

func (x *AdminListSAMLConnectionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AdminListSAMLConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnections []*SAMLConnection `protobuf:"bytes,1,rep,name=saml_connections,json=samlConnections,proto3" json:"saml_connections,omitempty"`
	NextPageToken   string            `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AdminListSAMLConnectionsResponse) Reset() {
	*x = AdminListSAMLConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListSAMLConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListSAMLConnectionsResponse) ProtoMessage() {}

func (x *AdminListSAMLConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListSAMLConnectionsResponse.ProtoReflect.Descriptor instead.
func (*AdminListSAMLConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{122}
}

func (x *AdminListSAMLConnectionsResponse) GetSamlConnections() []*SAMLConnection {
	if x != nil {
		return x.SamlConnections
	}
	return nil
}

func (x *AdminListSAMLConnectionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AdminGetSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdminGetSAMLConnectionRequest) Reset() {
	*x = AdminGetSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetSAMLConnectionRequest) ProtoMessage() {}

func (x *AdminGetSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*AdminGetSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{123}
}

func (x *AdminGetSAMLConnectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AdminGetSAMLConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AdminGetSAMLConnectionResponse) Reset() {
	*x = AdminGetSAMLConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetSAMLConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetSAMLConnectionResponse) ProtoMessage() {}

func (x *AdminGetSAMLConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetSAMLConnectionResponse.ProtoReflect.Descriptor instead.
func (*AdminGetSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{124}
}

func (x *AdminGetSAMLConnectionResponse) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AdminCreateSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AdminCreateSAMLConnectionRequest) Reset() {
	*x = AdminCreateSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateSAMLConnectionRequest) ProtoMessage() {}

func (x *AdminCreateSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{125}
}

func (x *AdminCreateSAMLConnectionRequest) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AdminCreateSAMLConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AdminCreateSAMLConnectionResponse) Reset() {
	*x = AdminCreateSAMLConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateSAMLConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateSAMLConnectionResponse) ProtoMessage() {}

func (x *AdminCreateSAMLConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateSAMLConnectionResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{126}
}

func (x *AdminCreateSAMLConnectionResponse) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AdminUpdateSAMLConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AdminUpdateSAMLConnectionRequest) Reset() {
	*x = AdminUpdateSAMLConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateSAMLConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateSAMLConnectionRequest) ProtoMessage() {}

func (x *AdminUpdateSAMLConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateSAMLConnectionRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateSAMLConnectionRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{127}
}

func (x *AdminUpdateSAMLConnectionRequest) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AdminUpdateSAMLConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SamlConnection *SAMLConnection `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
}

func (x *AdminUpdateSAMLConnectionResponse) Reset() {
	*x = AdminUpdateSAMLConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateSAMLConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateSAMLConnectionResponse) ProtoMessage() {}

func (x *AdminUpdateSAMLConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateSAMLConnectionResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateSAMLConnectionResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{128}
}

func (x *AdminUpdateSAMLConnectionResponse) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type AdminParseSAMLMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AdminParseSAMLMetadataRequest) Reset() {
	*x = AdminParseSAMLMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminParseSAMLMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminParseSAMLMetadataRequest) ProtoMessage() {}

func (x *AdminParseSAMLMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminParseSAMLMetadataRequest.ProtoReflect.Descriptor instead.
func (*AdminParseSAMLMetadataRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{129}
}

func (x *AdminParseSAMLMetadataRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AdminParseSAMLMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdpRedirectUrl string `protobuf:"bytes,1,opt,name=idp_redirect_url,json=idpRedirectUrl,proto3" json:"idp_redirect_url,omitempty"`
	IdpCertificate string `protobuf:"bytes,2,opt,name=idp_certificate,json=idpCertificate,proto3" json:"idp_certificate,omitempty"`
	IdpEntityId    string `protobuf:"bytes,3,opt,name=idp_entity_id,json=idpEntityId,proto3" json:"idp_entity_id,omitempty"`
}

func (x *AdminParseSAMLMetadataResponse) Reset() {
	*x = AdminParseSAMLMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminParseSAMLMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminParseSAMLMetadataResponse) ProtoMessage() {}

func (x *AdminParseSAMLMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminParseSAMLMetadataResponse.ProtoReflect.Descriptor instead.
func (*AdminParseSAMLMetadataResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{130}
}

func (x *AdminParseSAMLMetadataResponse) GetIdpRedirectUrl() string {
	if x != nil {
		return x.IdpRedirectUrl
	}
	return ""
}

func (x *AdminParseSAMLMetadataResponse) GetIdpCertificate() string {
	if x != nil {
		return x.IdpCertificate
	}
	return ""
}

func (x *AdminParseSAMLMetadataResponse) GetIdpEntityId() string {
	if x != nil {
		return x.IdpEntityId
	}
	return ""
}

type AdminListSCIMDirectoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *AdminListSCIMDirectoriesRequest) Reset() {
	*x = AdminListSCIMDirectoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListSCIMDirectoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListSCIMDirectoriesRequest) ProtoMessage() {}

func (x *AdminListSCIMDirectoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListSCIMDirectoriesRequest.ProtoReflect.Descriptor instead.
func (*AdminListSCIMDirectoriesRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{131}
}

func (x *AdminListSCIMDirectoriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AdminListSCIMDirectoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectories []*SCIMDirectory `protobuf:"bytes,1,rep,name=scim_directories,json=scimDirectories,proto3" json:"scim_directories,omitempty"`
	NextPageToken   string           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *AdminListSCIMDirectoriesResponse) Reset() {
	*x = AdminListSCIMDirectoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListSCIMDirectoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListSCIMDirectoriesResponse) ProtoMessage() {}

func (x *AdminListSCIMDirectoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListSCIMDirectoriesResponse.ProtoReflect.Descriptor instead.
func (*AdminListSCIMDirectoriesResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{132}
}

func (x *AdminListSCIMDirectoriesResponse) GetScimDirectories() []*SCIMDirectory {
	if x != nil {
		return x.ScimDirectories
	}
	return nil
}

func (x *AdminListSCIMDirectoriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AdminGetSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdminGetSCIMDirectoryRequest) Reset() {
	*x = AdminGetSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetSCIMDirectoryRequest) ProtoMessage() {}

func (x *AdminGetSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AdminGetSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{133}
}

func (x *AdminGetSCIMDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AdminGetSCIMDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AdminGetSCIMDirectoryResponse) Reset() {
	*x = AdminGetSCIMDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminGetSCIMDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminGetSCIMDirectoryResponse) ProtoMessage() {}

func (x *AdminGetSCIMDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminGetSCIMDirectoryResponse.ProtoReflect.Descriptor instead.
func (*AdminGetSCIMDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{134}
}

func (x *AdminGetSCIMDirectoryResponse) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AdminCreateSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AdminCreateSCIMDirectoryRequest) Reset() {
	*x = AdminCreateSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateSCIMDirectoryRequest) ProtoMessage() {}

func (x *AdminCreateSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AdminCreateSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{135}
}

func (x *AdminCreateSCIMDirectoryRequest) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AdminCreateSCIMDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AdminCreateSCIMDirectoryResponse) Reset() {
	*x = AdminCreateSCIMDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCreateSCIMDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateSCIMDirectoryResponse) ProtoMessage() {}

func (x *AdminCreateSCIMDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateSCIMDirectoryResponse.ProtoReflect.Descriptor instead.
func (*AdminCreateSCIMDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{136}
}

func (x *AdminCreateSCIMDirectoryResponse) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AdminUpdateSCIMDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AdminUpdateSCIMDirectoryRequest) Reset() {
	*x = AdminUpdateSCIMDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateSCIMDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateSCIMDirectoryRequest) ProtoMessage() {}

func (x *AdminUpdateSCIMDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateSCIMDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AdminUpdateSCIMDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{137}
}

func (x *AdminUpdateSCIMDirectoryRequest) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AdminUpdateSCIMDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectory *SCIMDirectory `protobuf:"bytes,1,opt,name=scim_directory,json=scimDirectory,proto3" json:"scim_directory,omitempty"`
}

func (x *AdminUpdateSCIMDirectoryResponse) Reset() {
	*x = AdminUpdateSCIMDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUpdateSCIMDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUpdateSCIMDirectoryResponse) ProtoMessage() {}

func (x *AdminUpdateSCIMDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUpdateSCIMDirectoryResponse.ProtoReflect.Descriptor instead.
func (*AdminUpdateSCIMDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{138}
}

func (x *AdminUpdateSCIMDirectoryResponse) GetScimDirectory() *SCIMDirectory {
	if x != nil {
		return x.ScimDirectory
	}
	return nil
}

type AdminRotateSCIMDirectoryBearerTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScimDirectoryId string `protobuf:"bytes,1,opt,name=scim_directory_id,json=scimDirectoryId,proto3" json:"scim_directory_id,omitempty"`
}

func (x *AdminRotateSCIMDirectoryBearerTokenRequest) Reset() {
	*x = AdminRotateSCIMDirectoryBearerTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRotateSCIMDirectoryBearerTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRotateSCIMDirectoryBearerTokenRequest) ProtoMessage() {}

func (x *AdminRotateSCIMDirectoryBearerTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRotateSCIMDirectoryBearerTokenRequest.ProtoReflect.Descriptor instead.
func (*AdminRotateSCIMDirectoryBearerTokenRequest) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{139}
}

func (x *AdminRotateSCIMDirectoryBearerTokenRequest) GetScimDirectoryId() string {
	if x != nil {
		return x.ScimDirectoryId
	}
	return ""
}

type AdminRotateSCIMDirectoryBearerTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BearerToken string `protobuf:"bytes,1,opt,name=bearer_token,json=bearerToken,proto3" json:"bearer_token,omitempty"`
}

func (x *AdminRotateSCIMDirectoryBearerTokenResponse) Reset() {
	*x = AdminRotateSCIMDirectoryBearerTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssoready_v1_ssoready_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRotateSCIMDirectoryBearerTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRotateSCIMDirectoryBearerTokenResponse) ProtoMessage() {}

func (x *AdminRotateSCIMDirectoryBearerTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssoready_v1_ssoready_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRotateSCIMDirectoryBearerTokenResponse.ProtoReflect.Descriptor instead.
func (*AdminRotateSCIMDirectoryBearerTokenResponse) Descriptor() ([]byte, []int) {
	return file_ssoready_v1_ssoready_proto_rawDescGZIP(), []int{140}
}

func (x *AdminRotateSCIMDirectoryBearerTokenResponse) GetBearerToken() string {
	if x != nil {
		return x.BearerToken
	}
	return ""
}

var File_ssoready_v1_ssoready_proto protoreflect.FileDescriptor

var file_ssoready_v1_ssoready_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xac, 0x01, 0x0a, 0x0b, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x22, 0x9d, 0x01, 0x0a, 0x06, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a,
	0x19, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x68, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x70, 0x69, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6d, 0x0a, 0x0f, 0x53, 0x41, 0x4d, 0x4c,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x0e, 0x53,
	0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x64, 0x70, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x70, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64,
	0x70, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x70, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x64, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x70, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x70, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x70, 0x5f,
	0x61, 0x63, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x70, 0x41, 0x63, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x98, 0x09, 0x0a, 0x08, 0x53, 0x41, 0x4d, 0x4c,
	0x46, 0x6c, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x75, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x11, 0x75,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0c, 0x62, 0x61, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x64, 0x41, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x64, 0x5f, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0c, 0x62, 0x61, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4d,
	0x0a, 0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x1f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x45, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c,
	0x46, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x50, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x63, 0x69, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x68,
	0x61, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61,
	0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x09, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x41, 0x4d, 0x4c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x47, 0x0a, 0x1b, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x61, 0x6d,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xe9, 0x02, 0x0a, 0x1c, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x41,
	0x4d, 0x4c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x59, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xe8, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69, 0x6d,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x63, 0x69, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x75, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09,
	0x73, 0x63, 0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x43,
	0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x73, 0x63, 0x69, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x22, 0xc5, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x79, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0a, 0x73, 0x63, 0x69, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x09, 0x73, 0x63, 0x69, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x39, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x28, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x5a, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x6c, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x69,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x53, 0x63, 0x69, 0x6d, 0x22, 0x2a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x64, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x61, 0x6d, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53,
	0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41,
	0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61,
	0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73,
	0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x69,
	0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x73,
	0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x5f, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63,
	0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d,
	0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x60, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e,
	0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x6f, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a,
	0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x22, 0x60, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x37, 0x0a, 0x25, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x26, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2a, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x6f, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x10, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x0e, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x81, 0x02,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x64, 0x75, 0x6d, 0x6d, 0x79, 0x69, 0x64, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x69, 0x64, 0x70, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x1a, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x1d, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x61, 0x6d,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x83, 0x02, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x69, 0x64, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x6d,
	0x6d, 0x79, 0x69, 0x64, 0x70, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x23, 0x4f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x61,
	0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x82,
	0x01, 0x0a, 0x25, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x61, 0x6d,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x30, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x5a, 0x0a, 0x1b, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70,
	0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1b, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70,
	0x69, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x68, 0x61, 0x73, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5a,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92,
	0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x73, 0x61, 0x6d, 0x6c, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x68, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x1b, 0x41, 0x70,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x87, 0x01, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x41, 0x70, 0x70,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61,
	0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53, 0x63, 0x69, 0x6d, 0x22,
	0x32, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x67, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41,
	0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x90, 0x01, 0x0a,
	0x1e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x10, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x2d, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66,
	0x0a, 0x1e, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66,
	0x0a, 0x17, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6d,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x09, 0x73,
	0x61, 0x6d, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x27, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x64, 0x70, 0x5f, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x64, 0x70, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x64, 0x70, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x70, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x64, 0x70, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1d,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x63, 0x69, 0x6d,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f,
	0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2c, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x47, 0x65,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49,
	0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x62, 0x0a, 0x1d, 0x41, 0x70, 0x70,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63,
	0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d,
	0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x56, 0x0a,
	0x28, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69,
	0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x29, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63,
	0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x63, 0x69, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x69, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a,
	0x73, 0x63, 0x69, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x73, 0x63, 0x69, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x15, 0x41, 0x70,
	0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x69,
	0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x63, 0x69, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x16, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0a, 0x73, 0x63, 0x69, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x46, 0x0a, 0x1e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51, 0x0a,
	0x1f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x4f, 0x6e, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x57,
	0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x53, 0x61, 0x6d, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x53, 0x63, 0x69, 0x6d, 0x22, 0x40, 0x0a,
	0x1f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x92, 0x01, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x61, 0x6d,
	0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x1d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x1e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65,
	0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73,
	0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a,
	0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x21, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41,
	0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61,
	0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x21,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x1d, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x1e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x69, 0x64, 0x70, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x70, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x70, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x64, 0x70, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x64, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x70, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x73,
	0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a, 0x1c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73,
	0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x64,
	0x0a, 0x1f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49,
	0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x65, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x69, 0x6d,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x63,
	0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x64, 0x0a, 0x1f, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x65, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x6d, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x58, 0x0a, 0x2a, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x63, 0x69, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x22, 0x50, 0x0a, 0x2b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x91, 0x01, 0x0a, 0x0e, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x41, 0x4d, 0x4c, 0x5f,
	0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x41, 0x4d,
	0x4c, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x41, 0x4d, 0x4c, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x41, 0x4d, 0x4c,
	0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x32, 0x8a, 0x43, 0x0a, 0x0f, 0x53, 0x53, 0x4f,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x52, 0x4c, 0x12, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d,
	0x4c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d,
	0x4c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x12, 0x6e, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49,
	0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x43,
	0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x22, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x71, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x20, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x7d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x7c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x8e, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x93, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x3a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x74, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x22, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2d, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x86, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9a, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x3a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2d, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c,
	0x3a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x6c, 0x2d, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49,
	0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x27, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x0e, 0x73,
	0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43,
	0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x0e, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x32, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d,
	0x2d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x1e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49,
	0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x69, 0x6d, 0x2d,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x2d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x12,
	0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68,
	0x6f, 0x61, 0x6d, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x79, 0x0a, 0x1c, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x30, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x41, 0x4d, 0x4c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x1e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x53, 0x41, 0x4d, 0x4c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x12,
	0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x70,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x12, 0x2d,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x70, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x12, 0x48, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x12, 0x20, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x41,
	0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d,
	0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x29,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x6b, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x12, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c, 0x12,
	0x2a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x41,
	0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x17, 0x41, 0x70,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x63, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x73, 0x6f,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41,
	0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53,
	0x41, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x22, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x62, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x2a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x41, 0x70, 0x70,
	0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x27, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x60, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x2a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x60, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x2a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x92, 0x01, 0x0a, 0x21, 0x41, 0x70,
	0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x35, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43,
	0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x10, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43,
	0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x22, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x11,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x25, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43,
	0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x74, 0x0a, 0x17, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x4f,
	0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x57,
	0x68, 0x6f, 0x61, 0x6d, 0x69, 0x12, 0x1f, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x71, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47,
	0x65, 0x74, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x41,
	0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7a, 0x0a, 0x19, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53,
	0x41, 0x4d, 0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x41, 0x4d, 0x4c, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x77, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x73, 0x6f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x29, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73,
	0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43,
	0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x77, 0x0a, 0x18, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x2e,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x23, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x37, 0x2e, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x53, 0x43, 0x49, 0x4d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xaf, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x73,
	0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x53, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2f,
	0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53,
	0x58, 0x58, 0xaa, 0x02, 0x0b, 0x53, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0b, 0x53, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x17, 0x53, 0x73, 0x6f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x53, 0x73, 0x6f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ssoready_v1_ssoready_proto_rawDescOnce sync.Once
	file_ssoready_v1_ssoready_proto_rawDescData = file_ssoready_v1_ssoready_proto_rawDesc
)

func file_ssoready_v1_ssoready_proto_rawDescGZIP() []byte {
	file_ssoready_v1_ssoready_proto_rawDescOnce.Do(func() {
		file_ssoready_v1_ssoready_proto_rawDescData = protoimpl.X.CompressGZIP(file_ssoready_v1_ssoready_proto_rawDescData)
	})
	return file_ssoready_v1_ssoready_proto_rawDescData
}

var file_ssoready_v1_ssoready_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ssoready_v1_ssoready_proto_msgTypes = make([]protoimpl.MessageInfo, 143)
var file_ssoready_v1_ssoready_proto_goTypes = []any{
	(SAMLFlowStatus)(0),                                 // 0: ssoready.v1.SAMLFlowStatus
	(*AppUser)(nil),                                     // 1: ssoready.v1.AppUser
	(*Environment)(nil),                                 // 2: ssoready.v1.Environment
	(*APIKey)(nil),                                      // 3: ssoready.v1.APIKey
	(*SAMLOAuthClient)(nil),                             // 4: ssoready.v1.SAMLOAuthClient
	(*Organization)(nil),                                // 5: ssoready.v1.Organization
	(*SAMLConnection)(nil),                              // 6: ssoready.v1.SAMLConnection
	(*SAMLFlow)(nil),                                    // 7: ssoready.v1.SAMLFlow
	(*SCIMDirectory)(nil),                               // 8: ssoready.v1.SCIMDirectory
	(*SCIMUser)(nil),                                    // 9: ssoready.v1.SCIMUser
	(*SCIMGroup)(nil),                                   // 10: ssoready.v1.SCIMGroup
	(*GetSAMLRedirectURLRequest)(nil),                   // 11: ssoready.v1.GetSAMLRedirectURLRequest
	(*GetSAMLRedirectURLResponse)(nil),                  // 12: ssoready.v1.GetSAMLRedirectURLResponse
	(*RedeemSAMLAccessCodeRequest)(nil),                 // 13: ssoready.v1.RedeemSAMLAccessCodeRequest
	(*RedeemSAMLAccessCodeResponse)(nil),                // 14: ssoready.v1.RedeemSAMLAccessCodeResponse
	(*ListSCIMUsersRequest)(nil),                        // 15: ssoready.v1.ListSCIMUsersRequest
	(*ListSCIMUsersResponse)(nil),                       // 16: ssoready.v1.ListSCIMUsersResponse
	(*GetSCIMUserRequest)(nil),                          // 17: ssoready.v1.GetSCIMUserRequest
	(*GetSCIMUserResponse)(nil),                         // 18: ssoready.v1.GetSCIMUserResponse
	(*ListSCIMGroupsRequest)(nil),                       // 19: ssoready.v1.ListSCIMGroupsRequest
	(*ListSCIMGroupsResponse)(nil),                      // 20: ssoready.v1.ListSCIMGroupsResponse
	(*GetSCIMGroupRequest)(nil),                         // 21: ssoready.v1.GetSCIMGroupRequest
	(*GetSCIMGroupResponse)(nil),                        // 22: ssoready.v1.GetSCIMGroupResponse
	(*ListOrganizationsRequest)(nil),                    // 23: ssoready.v1.ListOrganizationsRequest
	(*ListOrganizationsResponse)(nil),                   // 24: ssoready.v1.ListOrganizationsResponse
	(*GetOrganizationRequest)(nil),                      // 25: ssoready.v1.GetOrganizationRequest
	(*GetOrganizationResponse)(nil),                     // 26: ssoready.v1.GetOrganizationResponse
	(*CreateOrganizationRequest)(nil),                   // 27: ssoready.v1.CreateOrganizationRequest
	(*CreateOrganizationResponse)(nil),                  // 28: ssoready.v1.CreateOrganizationResponse
	(*UpdateOrganizationRequest)(nil),                   // 29: ssoready.v1.UpdateOrganizationRequest
	(*UpdateOrganizationResponse)(nil),                  // 30: ssoready.v1.UpdateOrganizationResponse
	(*CreateSetupURLRequest)(nil),                       // 31: ssoready.v1.CreateSetupURLRequest
	(*CreateSetupURLResponse)(nil),                      // 32: ssoready.v1.CreateSetupURLResponse
	(*ListSAMLConnectionsRequest)(nil),                  // 33: ssoready.v1.ListSAMLConnectionsRequest
	(*ListSAMLConnectionsResponse)(nil),                 // 34: ssoready.v1.ListSAMLConnectionsResponse
	(*GetSAMLConnectionRequest)(nil),                    // 35: ssoready.v1.GetSAMLConnectionRequest
	(*GetSAMLConnectionResponse)(nil),                   // 36: ssoready.v1.GetSAMLConnectionResponse
	(*CreateSAMLConnectionRequest)(nil),                 // 37: ssoready.v1.CreateSAMLConnectionRequest
	(*CreateSAMLConnectionResponse)(nil),                // 38: ssoready.v1.CreateSAMLConnectionResponse
	(*UpdateSAMLConnectionRequest)(nil),                 // 39: ssoready.v1.UpdateSAMLConnectionRequest
	(*UpdateSAMLConnectionResponse)(nil),                // 40: ssoready.v1.UpdateSAMLConnectionResponse
	(*ListSCIMDirectoriesRequest)(nil),                  // 41: ssoready.v1.ListSCIMDirectoriesRequest
	(*ListSCIMDirectoriesResponse)(nil),                 // 42: ssoready.v1.ListSCIMDirectoriesResponse
	(*GetSCIMDirectoryRequest)(nil),                     // 43: ssoready.v1.GetSCIMDirectoryRequest
	(*GetSCIMDirectoryResponse)(nil),                    // 44: ssoready.v1.GetSCIMDirectoryResponse
	(*CreateSCIMDirectoryRequest)(nil),                  // 45: ssoready.v1.CreateSCIMDirectoryRequest
	(*CreateSCIMDirectoryResponse)(nil),                 // 46: ssoready.v1.CreateSCIMDirectoryResponse
	(*UpdateSCIMDirectoryRequest)(nil),                  // 47: ssoready.v1.UpdateSCIMDirectoryRequest
	(*UpdateSCIMDirectoryResponse)(nil),                 // 48: ssoready.v1.UpdateSCIMDirectoryResponse
	(*RotateSCIMDirectoryBearerTokenRequest)(nil),       // 49: ssoready.v1.RotateSCIMDirectoryBearerTokenRequest
	(*RotateSCIMDirectoryBearerTokenResponse)(nil),      // 50: ssoready.v1.RotateSCIMDirectoryBearerTokenResponse
	(*VerifyEmailRequest)(nil),                          // 51: ssoready.v1.VerifyEmailRequest
	(*SignInRequest)(nil),                               // 52: ssoready.v1.SignInRequest
	(*SignInResponse)(nil),                              // 53: ssoready.v1.SignInResponse
	(*SignOutRequest)(nil),                              // 54: ssoready.v1.SignOutRequest
	(*SignOutResponse)(nil),                             // 55: ssoready.v1.SignOutResponse
	(*WhoamiRequest)(nil),                               // 56: ssoready.v1.WhoamiRequest
	(*WhoamiResponse)(nil),                              // 57: ssoready.v1.WhoamiResponse
	(*GetOnboardingStateRequest)(nil),                   // 58: ssoready.v1.GetOnboardingStateRequest
	(*GetOnboardingStateResponse)(nil),                  // 59: ssoready.v1.GetOnboardingStateResponse
	(*UpdateOnboardingStateRequest)(nil),                // 60: ssoready.v1.UpdateOnboardingStateRequest
	(*OnboardingGetSAMLRedirectURLRequest)(nil),         // 61: ssoready.v1.OnboardingGetSAMLRedirectURLRequest
	(*OnboardingRedeemSAMLAccessCodeRequest)(nil),       // 62: ssoready.v1.OnboardingRedeemSAMLAccessCodeRequest
	(*GetStripeCheckoutURLRequest)(nil),                 // 63: ssoready.v1.GetStripeCheckoutURLRequest
	(*GetStripeCheckoutURLResponse)(nil),                // 64: ssoready.v1.GetStripeCheckoutURLResponse
	(*RedeemStripeCheckoutRequest)(nil),                 // 65: ssoready.v1.RedeemStripeCheckoutRequest
	(*RedeemStripeCheckoutResponse)(nil),                // 66: ssoready.v1.RedeemStripeCheckoutResponse
	(*GetStripeBillingPortalURLRequest)(nil),            // 67: ssoready.v1.GetStripeBillingPortalURLRequest
	(*GetStripeBillingPortalURLResponse)(nil),           // 68: ssoready.v1.GetStripeBillingPortalURLResponse
	(*GetAppOrganizationRequest)(nil),                   // 69: ssoready.v1.GetAppOrganizationRequest
	(*GetAppOrganizationResponse)(nil),                  // 70: ssoready.v1.GetAppOrganizationResponse
	(*ListAppUsersRequest)(nil),                         // 71: ssoready.v1.ListAppUsersRequest
	(*ListAppUsersResponse)(nil),                        // 72: ssoready.v1.ListAppUsersResponse
	(*ListEnvironmentsRequest)(nil),                     // 73: ssoready.v1.ListEnvironmentsRequest
	(*ListEnvironmentsResponse)(nil),                    // 74: ssoready.v1.ListEnvironmentsResponse
	(*GetEnvironmentRequest)(nil),                       // 75: ssoready.v1.GetEnvironmentRequest
	(*CreateEnvironmentRequest)(nil),                    // 76: ssoready.v1.CreateEnvironmentRequest
	(*UpdateEnvironmentRequest)(nil),                    // 77: ssoready.v1.UpdateEnvironmentRequest
	(*ListAPIKeysRequest)(nil),                          // 78: ssoready.v1.ListAPIKeysRequest
	(*ListAPIKeysResponse)(nil),                         // 79: ssoready.v1.ListAPIKeysResponse
	(*GetAPIKeyRequest)(nil),                            // 80: ssoready.v1.GetAPIKeyRequest
	(*CreateAPIKeyRequest)(nil),                         // 81: ssoready.v1.CreateAPIKeyRequest
	(*DeleteAPIKeyRequest)(nil),                         // 82: ssoready.v1.DeleteAPIKeyRequest
	(*ListSAMLOAuthClientsRequest)(nil),                 // 83: ssoready.v1.ListSAMLOAuthClientsRequest
	(*ListSAMLOAuthClientsResponse)(nil),                // 84: ssoready.v1.ListSAMLOAuthClientsResponse
	(*GetSAMLOAuthClientRequest)(nil),                   // 85: ssoready.v1.GetSAMLOAuthClientRequest
	(*CreateSAMLOAuthClientRequest)(nil),                // 86: ssoready.v1.CreateSAMLOAuthClientRequest
	(*DeleteSAMLOAuthClientRequest)(nil),                // 87: ssoready.v1.DeleteSAMLOAuthClientRequest
	(*AppListOrganizationsRequest)(nil),                 // 88: ssoready.v1.AppListOrganizationsRequest
	(*AppListOrganizationsResponse)(nil),                // 89: ssoready.v1.AppListOrganizationsResponse
	(*AppGetOrganizationRequest)(nil),                   // 90: ssoready.v1.AppGetOrganizationRequest
	(*AppCreateOrganizationRequest)(nil),                // 91: ssoready.v1.AppCreateOrganizationRequest
	(*AppUpdateOrganizationRequest)(nil),                // 92: ssoready.v1.AppUpdateOrganizationRequest
	(*AppCreateAdminSetupURLRequest)(nil),               // 93: ssoready.v1.AppCreateAdminSetupURLRequest
	(*AppCreateAdminSetupURLResponse)(nil),              // 94: ssoready.v1.AppCreateAdminSetupURLResponse
	(*AppListSAMLConnectionsRequest)(nil),               // 95: ssoready.v1.AppListSAMLConnectionsRequest
	(*AppListSAMLConnectionsResponse)(nil),              // 96: ssoready.v1.AppListSAMLConnectionsResponse
	(*AppGetSAMLConnectionRequest)(nil),                 // 97: ssoready.v1.AppGetSAMLConnectionRequest
	(*AppCreateSAMLConnectionRequest)(nil),              // 98: ssoready.v1.AppCreateSAMLConnectionRequest
	(*AppUpdateSAMLConnectionRequest)(nil),              // 99: ssoready.v1.AppUpdateSAMLConnectionRequest
	(*AppListSAMLFlowsRequest)(nil),                     // 100: ssoready.v1.AppListSAMLFlowsRequest
	(*AppListSAMLFlowsResponse)(nil),                    // 101: ssoready.v1.AppListSAMLFlowsResponse
	(*AppGetSAMLFlowRequest)(nil),                       // 102: ssoready.v1.AppGetSAMLFlowRequest
	(*ParseSAMLMetadataRequest)(nil),                    // 103: ssoready.v1.ParseSAMLMetadataRequest
	(*ParseSAMLMetadataResponse)(nil),                   // 104: ssoready.v1.ParseSAMLMetadataResponse
	(*AppListSCIMDirectoriesRequest)(nil),               // 105: ssoready.v1.AppListSCIMDirectoriesRequest
	(*AppListSCIMDirectoriesResponse)(nil),              // 106: ssoready.v1.AppListSCIMDirectoriesResponse
	(*AppGetSCIMDirectoryRequest)(nil),                  // 107: ssoready.v1.AppGetSCIMDirectoryRequest
	(*AppCreateSCIMDirectoryRequest)(nil),               // 108: ssoready.v1.AppCreateSCIMDirectoryRequest
	(*AppUpdateSCIMDirectoryRequest)(nil),               // 109: ssoready.v1.AppUpdateSCIMDirectoryRequest
	(*AppRotateSCIMDirectoryBearerTokenRequest)(nil),    // 110: ssoready.v1.AppRotateSCIMDirectoryBearerTokenRequest
	(*AppRotateSCIMDirectoryBearerTokenResponse)(nil),   // 111: ssoready.v1.AppRotateSCIMDirectoryBearerTokenResponse
	(*AppListSCIMUsersRequest)(nil),                     // 112: ssoready.v1.AppListSCIMUsersRequest
	(*AppListSCIMUsersResponse)(nil),                    // 113: ssoready.v1.AppListSCIMUsersResponse
	(*AppGetSCIMUserRequest)(nil),                       // 114: ssoready.v1.AppGetSCIMUserRequest
	(*AppListSCIMGroupsRequest)(nil),                    // 115: ssoready.v1.AppListSCIMGroupsRequest
	(*AppGetSCIMGroupRequest)(nil),                      // 116: ssoready.v1.AppGetSCIMGroupRequest
	(*AppListSCIMGroupsResponse)(nil),                   // 117: ssoready.v1.AppListSCIMGroupsResponse
	(*AdminRedeemOneTimeTokenRequest)(nil),              // 118: ssoready.v1.AdminRedeemOneTimeTokenRequest
	(*AdminRedeemOneTimeTokenResponse)(nil),             // 119: ssoready.v1.AdminRedeemOneTimeTokenResponse
	(*AdminWhoamiRequest)(nil),                          // 120: ssoready.v1.AdminWhoamiRequest
	(*AdminWhoamiResponse)(nil),                         // 121: ssoready.v1.AdminWhoamiResponse
	(*AdminListSAMLConnectionsRequest)(nil),             // 122: ssoready.v1.AdminListSAMLConnectionsRequest
	(*AdminListSAMLConnectionsResponse)(nil),            // 123: ssoready.v1.AdminListSAMLConnectionsResponse
	(*AdminGetSAMLConnectionRequest)(nil),               // 124: ssoready.v1.AdminGetSAMLConnectionRequest
	(*AdminGetSAMLConnectionResponse)(nil),              // 125: ssoready.v1.AdminGetSAMLConnectionResponse
	(*AdminCreateSAMLConnectionRequest)(nil),            // 126: ssoready.v1.AdminCreateSAMLConnectionRequest
	(*AdminCreateSAMLConnectionResponse)(nil),           // 127: ssoready.v1.AdminCreateSAMLConnectionResponse
	(*AdminUpdateSAMLConnectionRequest)(nil),            // 128: ssoready.v1.AdminUpdateSAMLConnectionRequest
	(*AdminUpdateSAMLConnectionResponse)(nil),           // 129: ssoready.v1.AdminUpdateSAMLConnectionResponse
	(*AdminParseSAMLMetadataRequest)(nil),               // 130: ssoready.v1.AdminParseSAMLMetadataRequest
	(*AdminParseSAMLMetadataResponse)(nil),              // 131: ssoready.v1.AdminParseSAMLMetadataResponse
	(*AdminListSCIMDirectoriesRequest)(nil),             // 132: ssoready.v1.AdminListSCIMDirectoriesRequest
	(*AdminListSCIMDirectoriesResponse)(nil),            // 133: ssoready.v1.AdminListSCIMDirectoriesResponse
	(*AdminGetSCIMDirectoryRequest)(nil),                // 134: ssoready.v1.AdminGetSCIMDirectoryRequest
	(*AdminGetSCIMDirectoryResponse)(nil),               // 135: ssoready.v1.AdminGetSCIMDirectoryResponse
	(*AdminCreateSCIMDirectoryRequest)(nil),             // 136: ssoready.v1.AdminCreateSCIMDirectoryRequest
	(*AdminCreateSCIMDirectoryResponse)(nil),            // 137: ssoready.v1.AdminCreateSCIMDirectoryResponse
	(*AdminUpdateSCIMDirectoryRequest)(nil),             // 138: ssoready.v1.AdminUpdateSCIMDirectoryRequest
	(*AdminUpdateSCIMDirectoryResponse)(nil),            // 139: ssoready.v1.AdminUpdateSCIMDirectoryResponse
	(*AdminRotateSCIMDirectoryBearerTokenRequest)(nil),  // 140: ssoready.v1.AdminRotateSCIMDirectoryBearerTokenRequest
	(*AdminRotateSCIMDirectoryBearerTokenResponse)(nil), // 141: ssoready.v1.AdminRotateSCIMDirectoryBearerTokenResponse
	nil,                           // 142: ssoready.v1.SAMLFlow.AttributesEntry
	nil,                           // 143: ssoready.v1.RedeemSAMLAccessCodeResponse.AttributesEntry
	(*emptypb.Empty)(nil),         // 144: google.protobuf.Empty
	(*timestamppb.Timestamp)(nil), // 145: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 146: google.protobuf.Struct
}
var file_ssoready_v1_ssoready_proto_depIdxs = []int32{
	0,   // 0: ssoready.v1.SAMLFlow.status:type_name -> ssoready.v1.SAMLFlowStatus
	144, // 1: ssoready.v1.SAMLFlow.unsigned_assertion:type_name -> google.protobuf.Empty
	142, // 2: ssoready.v1.SAMLFlow.attributes:type_name -> ssoready.v1.SAMLFlow.AttributesEntry
	145, // 3: ssoready.v1.SAMLFlow.create_time:type_name -> google.protobuf.Timestamp
	145, // 4: ssoready.v1.SAMLFlow.update_time:type_name -> google.protobuf.Timestamp
	145, // 5: ssoready.v1.SAMLFlow.get_redirect_time:type_name -> google.protobuf.Timestamp
	145, // 6: ssoready.v1.SAMLFlow.initiate_time:type_name -> google.protobuf.Timestamp
	145, // 7: ssoready.v1.SAMLFlow.receive_assertion_time:type_name -> google.protobuf.Timestamp
	145, // 8: ssoready.v1.SAMLFlow.redeem_time:type_name -> google.protobuf.Timestamp
	146, // 9: ssoready.v1.SCIMUser.attributes:type_name -> google.protobuf.Struct
	146, // 10: ssoready.v1.SCIMGroup.attributes:type_name -> google.protobuf.Struct
	143, // 11: ssoready.v1.RedeemSAMLAccessCodeResponse.attributes:type_name -> ssoready.v1.RedeemSAMLAccessCodeResponse.AttributesEntry
	9,   // 12: ssoready.v1.ListSCIMUsersResponse.scim_users:type_name -> ssoready.v1.SCIMUser
	9,   // 13: ssoready.v1.GetSCIMUserResponse.scim_user:type_name -> ssoready.v1.SCIMUser
	10,  // 14: ssoready.v1.ListSCIMGroupsResponse.scim_groups:type_name -> ssoready.v1.SCIMGroup
	10,  // 15: ssoready.v1.GetSCIMGroupResponse.scim_group:type_name -> ssoready.v1.SCIMGroup
	5,   // 16: ssoready.v1.ListOrganizationsResponse.organizations:type_name -> ssoready.v1.Organization
	5,   // 17: ssoready.v1.GetOrganizationResponse.organization:type_name -> ssoready.v1.Organization
	5,   // 18: ssoready.v1.CreateOrganizationRequest.organization:type_name -> ssoready.v1.Organization
	5,   // 19: ssoready.v1.CreateOrganizationResponse.organization:type_name -> ssoready.v1.Organization
	5,   // 20: ssoready.v1.UpdateOrganizationRequest.organization:type_name -> ssoready.v1.Organization
	5,   // 21: ssoready.v1.UpdateOrganizationResponse.organization:type_name -> ssoready.v1.Organization
	6,   // 22: ssoready.v1.ListSAMLConnectionsResponse.saml_connections:type_name -> ssoready.v1.SAMLConnection
	6,   // 23: ssoready.v1.GetSAMLConnectionResponse.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 24: ssoready.v1.CreateSAMLConnectionRequest.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 25: ssoready.v1.CreateSAMLConnectionResponse.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 26: ssoready.v1.UpdateSAMLConnectionRequest.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 27: ssoready.v1.UpdateSAMLConnectionResponse.saml_connection:type_name -> ssoready.v1.SAMLConnection
	8,   // 28: ssoready.v1.ListSCIMDirectoriesResponse.scim_directories:type_name -> ssoready.v1.SCIMDirectory
	8,   // 29: ssoready.v1.GetSCIMDirectoryResponse.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 30: ssoready.v1.CreateSCIMDirectoryRequest.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 31: ssoready.v1.CreateSCIMDirectoryResponse.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 32: ssoready.v1.UpdateSCIMDirectoryRequest.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 33: ssoready.v1.UpdateSCIMDirectoryResponse.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	1,   // 34: ssoready.v1.ListAppUsersResponse.app_users:type_name -> ssoready.v1.AppUser
	2,   // 35: ssoready.v1.ListEnvironmentsResponse.environments:type_name -> ssoready.v1.Environment
	2,   // 36: ssoready.v1.CreateEnvironmentRequest.environment:type_name -> ssoready.v1.Environment
	2,   // 37: ssoready.v1.UpdateEnvironmentRequest.environment:type_name -> ssoready.v1.Environment
	3,   // 38: ssoready.v1.ListAPIKeysResponse.api_keys:type_name -> ssoready.v1.APIKey
	3,   // 39: ssoready.v1.CreateAPIKeyRequest.api_key:type_name -> ssoready.v1.APIKey
	4,   // 40: ssoready.v1.ListSAMLOAuthClientsResponse.saml_oauth_clients:type_name -> ssoready.v1.SAMLOAuthClient
	4,   // 41: ssoready.v1.CreateSAMLOAuthClientRequest.saml_oauth_client:type_name -> ssoready.v1.SAMLOAuthClient
	5,   // 42: ssoready.v1.AppListOrganizationsResponse.organizations:type_name -> ssoready.v1.Organization
	5,   // 43: ssoready.v1.AppCreateOrganizationRequest.organization:type_name -> ssoready.v1.Organization
	5,   // 44: ssoready.v1.AppUpdateOrganizationRequest.organization:type_name -> ssoready.v1.Organization
	6,   // 45: ssoready.v1.AppListSAMLConnectionsResponse.saml_connections:type_name -> ssoready.v1.SAMLConnection
	6,   // 46: ssoready.v1.AppCreateSAMLConnectionRequest.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 47: ssoready.v1.AppUpdateSAMLConnectionRequest.saml_connection:type_name -> ssoready.v1.SAMLConnection
	7,   // 48: ssoready.v1.AppListSAMLFlowsResponse.saml_flows:type_name -> ssoready.v1.SAMLFlow
	8,   // 49: ssoready.v1.AppListSCIMDirectoriesResponse.scim_directories:type_name -> ssoready.v1.SCIMDirectory
	8,   // 50: ssoready.v1.AppCreateSCIMDirectoryRequest.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 51: ssoready.v1.AppUpdateSCIMDirectoryRequest.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	9,   // 52: ssoready.v1.AppListSCIMUsersResponse.scim_users:type_name -> ssoready.v1.SCIMUser
	10,  // 53: ssoready.v1.AppListSCIMGroupsResponse.scim_groups:type_name -> ssoready.v1.SCIMGroup
	6,   // 54: ssoready.v1.AdminListSAMLConnectionsResponse.saml_connections:type_name -> ssoready.v1.SAMLConnection
	6,   // 55: ssoready.v1.AdminGetSAMLConnectionResponse.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 56: ssoready.v1.AdminCreateSAMLConnectionRequest.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 57: ssoready.v1.AdminCreateSAMLConnectionResponse.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 58: ssoready.v1.AdminUpdateSAMLConnectionRequest.saml_connection:type_name -> ssoready.v1.SAMLConnection
	6,   // 59: ssoready.v1.AdminUpdateSAMLConnectionResponse.saml_connection:type_name -> ssoready.v1.SAMLConnection
	8,   // 60: ssoready.v1.AdminListSCIMDirectoriesResponse.scim_directories:type_name -> ssoready.v1.SCIMDirectory
	8,   // 61: ssoready.v1.AdminGetSCIMDirectoryResponse.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 62: ssoready.v1.AdminCreateSCIMDirectoryRequest.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 63: ssoready.v1.AdminCreateSCIMDirectoryResponse.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 64: ssoready.v1.AdminUpdateSCIMDirectoryRequest.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	8,   // 65: ssoready.v1.AdminUpdateSCIMDirectoryResponse.scim_directory:type_name -> ssoready.v1.SCIMDirectory
	11,  // 66: ssoready.v1.SSOReadyService.GetSAMLRedirectURL:input_type -> ssoready.v1.GetSAMLRedirectURLRequest
	13,  // 67: ssoready.v1.SSOReadyService.RedeemSAMLAccessCode:input_type -> ssoready.v1.RedeemSAMLAccessCodeRequest
	15,  // 68: ssoready.v1.SSOReadyService.ListSCIMUsers:input_type -> ssoready.v1.ListSCIMUsersRequest
	17,  // 69: ssoready.v1.SSOReadyService.GetSCIMUser:input_type -> ssoready.v1.GetSCIMUserRequest
	19,  // 70: ssoready.v1.SSOReadyService.ListSCIMGroups:input_type -> ssoready.v1.ListSCIMGroupsRequest
	21,  // 71: ssoready.v1.SSOReadyService.GetSCIMGroup:input_type -> ssoready.v1.GetSCIMGroupRequest
	23,  // 72: ssoready.v1.SSOReadyService.ListOrganizations:input_type -> ssoready.v1.ListOrganizationsRequest
	25,  // 73: ssoready.v1.SSOReadyService.GetOrganization:input_type -> ssoready.v1.GetOrganizationRequest
	27,  // 74: ssoready.v1.SSOReadyService.CreateOrganization:input_type -> ssoready.v1.CreateOrganizationRequest
	29,  // 75: ssoready.v1.SSOReadyService.UpdateOrganization:input_type -> ssoready.v1.UpdateOrganizationRequest
	31,  // 76: ssoready.v1.SSOReadyService.CreateSetupURL:input_type -> ssoready.v1.CreateSetupURLRequest
	33,  // 77: ssoready.v1.SSOReadyService.ListSAMLConnections:input_type -> ssoready.v1.ListSAMLConnectionsRequest
	35,  // 78: ssoready.v1.SSOReadyService.GetSAMLConnection:input_type -> ssoready.v1.GetSAMLConnectionRequest
	37,  // 79: ssoready.v1.SSOReadyService.CreateSAMLConnection:input_type -> ssoready.v1.CreateSAMLConnectionRequest
	39,  // 80: ssoready.v1.SSOReadyService.UpdateSAMLConnection:input_type -> ssoready.v1.UpdateSAMLConnectionRequest
	41,  // 81: ssoready.v1.SSOReadyService.ListSCIMDirectories:input_type -> ssoready.v1.ListSCIMDirectoriesRequest
	43,  // 82: ssoready.v1.SSOReadyService.GetSCIMDirectory:input_type -> ssoready.v1.GetSCIMDirectoryRequest
	45,  // 83: ssoready.v1.SSOReadyService.CreateSCIMDirectory:input_type -> ssoready.v1.CreateSCIMDirectoryRequest
	47,  // 84: ssoready.v1.SSOReadyService.UpdateSCIMDirectory:input_type -> ssoready.v1.UpdateSCIMDirectoryRequest
	49,  // 85: ssoready.v1.SSOReadyService.RotateSCIMDirectoryBearerToken:input_type -> ssoready.v1.RotateSCIMDirectoryBearerTokenRequest
	51,  // 86: ssoready.v1.SSOReadyService.VerifyEmail:input_type -> ssoready.v1.VerifyEmailRequest
	52,  // 87: ssoready.v1.SSOReadyService.SignIn:input_type -> ssoready.v1.SignInRequest
	54,  // 88: ssoready.v1.SSOReadyService.SignOut:input_type -> ssoready.v1.SignOutRequest
	56,  // 89: ssoready.v1.SSOReadyService.Whoami:input_type -> ssoready.v1.WhoamiRequest
	58,  // 90: ssoready.v1.SSOReadyService.GetOnboardingState:input_type -> ssoready.v1.GetOnboardingStateRequest
	60,  // 91: ssoready.v1.SSOReadyService.UpdateOnboardingState:input_type -> ssoready.v1.UpdateOnboardingStateRequest
	61,  // 92: ssoready.v1.SSOReadyService.OnboardingGetSAMLRedirectURL:input_type -> ssoready.v1.OnboardingGetSAMLRedirectURLRequest
	62,  // 93: ssoready.v1.SSOReadyService.OnboardingRedeemSAMLAccessCode:input_type -> ssoready.v1.OnboardingRedeemSAMLAccessCodeRequest
	63,  // 94: ssoready.v1.SSOReadyService.GetStripeCheckoutURL:input_type -> ssoready.v1.GetStripeCheckoutURLRequest
	65,  // 95: ssoready.v1.SSOReadyService.RedeemStripeCheckout:input_type -> ssoready.v1.RedeemStripeCheckoutRequest
	67,  // 96: ssoready.v1.SSOReadyService.GetStripeBillingPortalURL:input_type -> ssoready.v1.GetStripeBillingPortalURLRequest
	69,  // 97: ssoready.v1.SSOReadyService.GetAppOrganization:input_type -> ssoready.v1.GetAppOrganizationRequest
	71,  // 98: ssoready.v1.SSOReadyService.ListAppUsers:input_type -> ssoready.v1.ListAppUsersRequest
	73,  // 99: ssoready.v1.SSOReadyService.ListEnvironments:input_type -> ssoready.v1.ListEnvironmentsRequest
	75,  // 100: ssoready.v1.SSOReadyService.GetEnvironment:input_type -> ssoready.v1.GetEnvironmentRequest
	76,  // 101: ssoready.v1.SSOReadyService.CreateEnvironment:input_type -> ssoready.v1.CreateEnvironmentRequest
	77,  // 102: ssoready.v1.SSOReadyService.UpdateEnvironment:input_type -> ssoready.v1.UpdateEnvironmentRequest
	78,  // 103: ssoready.v1.SSOReadyService.ListAPIKeys:input_type -> ssoready.v1.ListAPIKeysRequest
	80,  // 104: ssoready.v1.SSOReadyService.GetAPIKey:input_type -> ssoready.v1.GetAPIKeyRequest
	81,  // 105: ssoready.v1.SSOReadyService.CreateAPIKey:input_type -> ssoready.v1.CreateAPIKeyRequest
	82,  // 106: ssoready.v1.SSOReadyService.DeleteAPIKey:input_type -> ssoready.v1.DeleteAPIKeyRequest
	83,  // 107: ssoready.v1.SSOReadyService.ListSAMLOAuthClients:input_type -> ssoready.v1.ListSAMLOAuthClientsRequest
	85,  // 108: ssoready.v1.SSOReadyService.GetSAMLOAuthClient:input_type -> ssoready.v1.GetSAMLOAuthClientRequest
	86,  // 109: ssoready.v1.SSOReadyService.CreateSAMLOAuthClient:input_type -> ssoready.v1.CreateSAMLOAuthClientRequest
	87,  // 110: ssoready.v1.SSOReadyService.DeleteSAMLOAuthClient:input_type -> ssoready.v1.DeleteSAMLOAuthClientRequest
	88,  // 111: ssoready.v1.SSOReadyService.AppListOrganizations:input_type -> ssoready.v1.AppListOrganizationsRequest
	90,  // 112: ssoready.v1.SSOReadyService.AppGetOrganization:input_type -> ssoready.v1.AppGetOrganizationRequest
	91,  // 113: ssoready.v1.SSOReadyService.AppCreateOrganization:input_type -> ssoready.v1.AppCreateOrganizationRequest
	92,  // 114: ssoready.v1.SSOReadyService.AppUpdateOrganization:input_type -> ssoready.v1.AppUpdateOrganizationRequest
	93,  // 115: ssoready.v1.SSOReadyService.AppCreateAdminSetupURL:input_type -> ssoready.v1.AppCreateAdminSetupURLRequest
	95,  // 116: ssoready.v1.SSOReadyService.AppListSAMLConnections:input_type -> ssoready.v1.AppListSAMLConnectionsRequest
	97,  // 117: ssoready.v1.SSOReadyService.AppGetSAMLConnection:input_type -> ssoready.v1.AppGetSAMLConnectionRequest
	98,  // 118: ssoready.v1.SSOReadyService.AppCreateSAMLConnection:input_type -> ssoready.v1.AppCreateSAMLConnectionRequest
	99,  // 119: ssoready.v1.SSOReadyService.AppUpdateSAMLConnection:input_type -> ssoready.v1.AppUpdateSAMLConnectionRequest
	100, // 120: ssoready.v1.SSOReadyService.AppListSAMLFlows:input_type -> ssoready.v1.AppListSAMLFlowsRequest
	102, // 121: ssoready.v1.SSOReadyService.AppGetSAMLFlow:input_type -> ssoready.v1.AppGetSAMLFlowRequest
	103, // 122: ssoready.v1.SSOReadyService.ParseSAMLMetadata:input_type -> ssoready.v1.ParseSAMLMetadataRequest
	105, // 123: ssoready.v1.SSOReadyService.AppListSCIMDirectories:input_type -> ssoready.v1.AppListSCIMDirectoriesRequest
	107, // 124: ssoready.v1.SSOReadyService.AppGetSCIMDirectory:input_type -> ssoready.v1.AppGetSCIMDirectoryRequest
	108, // 125: ssoready.v1.SSOReadyService.AppCreateSCIMDirectory:input_type -> ssoready.v1.AppCreateSCIMDirectoryRequest
	109, // 126: ssoready.v1.SSOReadyService.AppUpdateSCIMDirectory:input_type -> ssoready.v1.AppUpdateSCIMDirectoryRequest
	110, // 127: ssoready.v1.SSOReadyService.AppRotateSCIMDirectoryBearerToken:input_type -> ssoready.v1.AppRotateSCIMDirectoryBearerTokenRequest
	112, // 128: ssoready.v1.SSOReadyService.AppListSCIMUsers:input_type -> ssoready.v1.AppListSCIMUsersRequest
	114, // 129: ssoready.v1.SSOReadyService.AppGetSCIMUser:input_type -> ssoready.v1.AppGetSCIMUserRequest
	115, // 130: ssoready.v1.SSOReadyService.AppListSCIMGroups:input_type -> ssoready.v1.AppListSCIMGroupsRequest
	116, // 131: ssoready.v1.SSOReadyService.AppGetSCIMGroup:input_type -> ssoready.v1.AppGetSCIMGroupRequest
	118, // 132: ssoready.v1.SSOReadyService.AdminRedeemOneTimeToken:input_type -> ssoready.v1.AdminRedeemOneTimeTokenRequest
	120, // 133: ssoready.v1.SSOReadyService.AdminWhoami:input_type -> ssoready.v1.AdminWhoamiRequest
	122, // 134: ssoready.v1.SSOReadyService.AdminListSAMLConnections:input_type -> ssoready.v1.AdminListSAMLConnectionsRequest
	124, // 135: ssoready.v1.SSOReadyService.AdminGetSAMLConnection:input_type -> ssoready.v1.AdminGetSAMLConnectionRequest
	126, // 136: ssoready.v1.SSOReadyService.AdminCreateSAMLConnection:input_type -> ssoready.v1.AdminCreateSAMLConnectionRequest
	128, // 137: ssoready.v1.SSOReadyService.AdminUpdateSAMLConnection:input_type -> ssoready.v1.AdminUpdateSAMLConnectionRequest
	130, // 138: ssoready.v1.SSOReadyService.AdminParseSAMLMetadata:input_type -> ssoready.v1.AdminParseSAMLMetadataRequest
	132, // 139: ssoready.v1.SSOReadyService.AdminListSCIMDirectories:input_type -> ssoready.v1.AdminListSCIMDirectoriesRequest
	134, // 140: ssoready.v1.SSOReadyService.AdminGetSCIMDirectory:input_type -> ssoready.v1.AdminGetSCIMDirectoryRequest
	136, // 141: ssoready.v1.SSOReadyService.AdminCreateSCIMDirectory:input_type -> ssoready.v1.AdminCreateSCIMDirectoryRequest
	138, // 142: ssoready.v1.SSOReadyService.AdminUpdateSCIMDirectory:input_type -> ssoready.v1.AdminUpdateSCIMDirectoryRequest
	140, // 143: ssoready.v1.SSOReadyService.AdminRotateSCIMDirectoryBearerToken:input_type -> ssoready.v1.AdminRotateSCIMDirectoryBearerTokenRequest
	12,  // 144: ssoready.v1.SSOReadyService.GetSAMLRedirectURL:output_type -> ssoready.v1.GetSAMLRedirectURLResponse
	14,  // 145: ssoready.v1.SSOReadyService.RedeemSAMLAccessCode:output_type -> ssoready.v1.RedeemSAMLAccessCodeResponse
	16,  // 146: ssoready.v1.SSOReadyService.ListSCIMUsers:output_type -> ssoready.v1.ListSCIMUsersResponse
	18,  // 147: ssoready.v1.SSOReadyService.GetSCIMUser:output_type -> ssoready.v1.GetSCIMUserResponse
	20,  // 148: ssoready.v1.SSOReadyService.ListSCIMGroups:output_type -> ssoready.v1.ListSCIMGroupsResponse
	22,  // 149: ssoready.v1.SSOReadyService.GetSCIMGroup:output_type -> ssoready.v1.GetSCIMGroupResponse
	24,  // 150: ssoready.v1.SSOReadyService.ListOrganizations:output_type -> ssoready.v1.ListOrganizationsResponse
	26,  // 151: ssoready.v1.SSOReadyService.GetOrganization:output_type -> ssoready.v1.GetOrganizationResponse
	28,  // 152: ssoready.v1.SSOReadyService.CreateOrganization:output_type -> ssoready.v1.CreateOrganizationResponse
	30,  // 153: ssoready.v1.SSOReadyService.UpdateOrganization:output_type -> ssoready.v1.UpdateOrganizationResponse
	32,  // 154: ssoready.v1.SSOReadyService.CreateSetupURL:output_type -> ssoready.v1.CreateSetupURLResponse
	34,  // 155: ssoready.v1.SSOReadyService.ListSAMLConnections:output_type -> ssoready.v1.ListSAMLConnectionsResponse
	36,  // 156: ssoready.v1.SSOReadyService.GetSAMLConnection:output_type -> ssoready.v1.GetSAMLConnectionResponse
	38,  // 157: ssoready.v1.SSOReadyService.CreateSAMLConnection:output_type -> ssoready.v1.CreateSAMLConnectionResponse
	40,  // 158: ssoready.v1.SSOReadyService.UpdateSAMLConnection:output_type -> ssoready.v1.UpdateSAMLConnectionResponse
	42,  // 159: ssoready.v1.SSOReadyService.ListSCIMDirectories:output_type -> ssoready.v1.ListSCIMDirectoriesResponse
	44,  // 160: ssoready.v1.SSOReadyService.GetSCIMDirectory:output_type -> ssoready.v1.GetSCIMDirectoryResponse
	46,  // 161: ssoready.v1.SSOReadyService.CreateSCIMDirectory:output_type -> ssoready.v1.CreateSCIMDirectoryResponse
	48,  // 162: ssoready.v1.SSOReadyService.UpdateSCIMDirectory:output_type -> ssoready.v1.UpdateSCIMDirectoryResponse
	50,  // 163: ssoready.v1.SSOReadyService.RotateSCIMDirectoryBearerToken:output_type -> ssoready.v1.RotateSCIMDirectoryBearerTokenResponse
	144, // 164: ssoready.v1.SSOReadyService.VerifyEmail:output_type -> google.protobuf.Empty
	53,  // 165: ssoready.v1.SSOReadyService.SignIn:output_type -> ssoready.v1.SignInResponse
	55,  // 166: ssoready.v1.SSOReadyService.SignOut:output_type -> ssoready.v1.SignOutResponse
	57,  // 167: ssoready.v1.SSOReadyService.Whoami:output_type -> ssoready.v1.WhoamiResponse
	59,  // 168: ssoready.v1.SSOReadyService.GetOnboardingState:output_type -> ssoready.v1.GetOnboardingStateResponse
	144, // 169: ssoready.v1.SSOReadyService.UpdateOnboardingState:output_type -> google.protobuf.Empty
	12,  // 170: ssoready.v1.SSOReadyService.OnboardingGetSAMLRedirectURL:output_type -> ssoready.v1.GetSAMLRedirectURLResponse
	14,  // 171: ssoready.v1.SSOReadyService.OnboardingRedeemSAMLAccessCode:output_type -> ssoready.v1.RedeemSAMLAccessCodeResponse
	64,  // 172: ssoready.v1.SSOReadyService.GetStripeCheckoutURL:output_type -> ssoready.v1.GetStripeCheckoutURLResponse
	66,  // 173: ssoready.v1.SSOReadyService.RedeemStripeCheckout:output_type -> ssoready.v1.RedeemStripeCheckoutResponse
	68,  // 174: ssoready.v1.SSOReadyService.GetStripeBillingPortalURL:output_type -> ssoready.v1.GetStripeBillingPortalURLResponse
	70,  // 175: ssoready.v1.SSOReadyService.GetAppOrganization:output_type -> ssoready.v1.GetAppOrganizationResponse
	72,  // 176: ssoready.v1.SSOReadyService.ListAppUsers:output_type -> ssoready.v1.ListAppUsersResponse
	74,  // 177: ssoready.v1.SSOReadyService.ListEnvironments:output_type -> ssoready.v1.ListEnvironmentsResponse
	2,   // 178: ssoready.v1.SSOReadyService.GetEnvironment:output_type -> ssoready.v1.Environment
	2,   // 179: ssoready.v1.SSOReadyService.CreateEnvironment:output_type -> ssoready.v1.Environment
	2,   // 180: ssoready.v1.SSOReadyService.UpdateEnvironment:output_type -> ssoready.v1.Environment
	79,  // 181: ssoready.v1.SSOReadyService.ListAPIKeys:output_type -> ssoready.v1.ListAPIKeysResponse
	3,   // 182: ssoready.v1.SSOReadyService.GetAPIKey:output_type -> ssoready.v1.APIKey
	3,   // 183: ssoready.v1.SSOReadyService.CreateAPIKey:output_type -> ssoready.v1.APIKey
	144, // 184: ssoready.v1.SSOReadyService.DeleteAPIKey:output_type -> google.protobuf.Empty
	84,  // 185: ssoready.v1.SSOReadyService.ListSAMLOAuthClients:output_type -> ssoready.v1.ListSAMLOAuthClientsResponse
	4,   // 186: ssoready.v1.SSOReadyService.GetSAMLOAuthClient:output_type -> ssoready.v1.SAMLOAuthClient
	4,   // 187: ssoready.v1.SSOReadyService.CreateSAMLOAuthClient:output_type -> ssoready.v1.SAMLOAuthClient
	144, // 188: ssoready.v1.SSOReadyService.DeleteSAMLOAuthClient:output_type -> google.protobuf.Empty
	89,  // 189: ssoready.v1.SSOReadyService.AppListOrganizations:output_type -> ssoready.v1.AppListOrganizationsResponse
	5,   // 190: ssoready.v1.SSOReadyService.AppGetOrganization:output_type -> ssoready.v1.Organization
	5,   // 191: ssoready.v1.SSOReadyService.AppCreateOrganization:output_type -> ssoready.v1.Organization
	5,   // 192: ssoready.v1.SSOReadyService.AppUpdateOrganization:output_type -> ssoready.v1.Organization
	94,  // 193: ssoready.v1.SSOReadyService.AppCreateAdminSetupURL:output_type -> ssoready.v1.AppCreateAdminSetupURLResponse
	96,  // 194: ssoready.v1.SSOReadyService.AppListSAMLConnections:output_type -> ssoready.v1.AppListSAMLConnectionsResponse
	6,   // 195: ssoready.v1.SSOReadyService.AppGetSAMLConnection:output_type -> ssoready.v1.SAMLConnection
	6,   // 196: ssoready.v1.SSOReadyService.AppCreateSAMLConnection:output_type -> ssoready.v1.SAMLConnection
	6,   // 197: ssoready.v1.SSOReadyService.AppUpdateSAMLConnection:output_type -> ssoready.v1.SAMLConnection
	101, // 198: ssoready.v1.SSOReadyService.AppListSAMLFlows:output_type -> ssoready.v1.AppListSAMLFlowsResponse
	7,   // 199: ssoready.v1.SSOReadyService.AppGetSAMLFlow:output_type -> ssoready.v1.SAMLFlow
	104, // 200: ssoready.v1.SSOReadyService.ParseSAMLMetadata:output_type -> ssoready.v1.ParseSAMLMetadataResponse
	106, // 201: ssoready.v1.SSOReadyService.AppListSCIMDirectories:output_type -> ssoready.v1.AppListSCIMDirectoriesResponse
	8,   // 202: ssoready.v1.SSOReadyService.AppGetSCIMDirectory:output_type -> ssoready.v1.SCIMDirectory
	8,   // 203: ssoready.v1.SSOReadyService.AppCreateSCIMDirectory:output_type -> ssoready.v1.SCIMDirectory
	8,   // 204: ssoready.v1.SSOReadyService.AppUpdateSCIMDirectory:output_type -> ssoready.v1.SCIMDirectory
	111, // 205: ssoready.v1.SSOReadyService.AppRotateSCIMDirectoryBearerToken:output_type -> ssoready.v1.AppRotateSCIMDirectoryBearerTokenResponse
	113, // 206: ssoready.v1.SSOReadyService.AppListSCIMUsers:output_type -> ssoready.v1.AppListSCIMUsersResponse
	9,   // 207: ssoready.v1.SSOReadyService.AppGetSCIMUser:output_type -> ssoready.v1.SCIMUser
	117, // 208: ssoready.v1.SSOReadyService.AppListSCIMGroups:output_type -> ssoready.v1.AppListSCIMGroupsResponse
	10,  // 209: ssoready.v1.SSOReadyService.AppGetSCIMGroup:output_type -> ssoready.v1.SCIMGroup
	119, // 210: ssoready.v1.SSOReadyService.AdminRedeemOneTimeToken:output_type -> ssoready.v1.AdminRedeemOneTimeTokenResponse
	121, // 211: ssoready.v1.SSOReadyService.AdminWhoami:output_type -> ssoready.v1.AdminWhoamiResponse
	123, // 212: ssoready.v1.SSOReadyService.AdminListSAMLConnections:output_type -> ssoready.v1.AdminListSAMLConnectionsResponse
	125, // 213: ssoready.v1.SSOReadyService.AdminGetSAMLConnection:output_type -> ssoready.v1.AdminGetSAMLConnectionResponse
	127, // 214: ssoready.v1.SSOReadyService.AdminCreateSAMLConnection:output_type -> ssoready.v1.AdminCreateSAMLConnectionResponse
	129, // 215: ssoready.v1.SSOReadyService.AdminUpdateSAMLConnection:output_type -> ssoready.v1.AdminUpdateSAMLConnectionResponse
	131, // 216: ssoready.v1.SSOReadyService.AdminParseSAMLMetadata:output_type -> ssoready.v1.AdminParseSAMLMetadataResponse
	133, // 217: ssoready.v1.SSOReadyService.AdminListSCIMDirectories:output_type -> ssoready.v1.AdminListSCIMDirectoriesResponse
	135, // 218: ssoready.v1.SSOReadyService.AdminGetSCIMDirectory:output_type -> ssoready.v1.AdminGetSCIMDirectoryResponse
	137, // 219: ssoready.v1.SSOReadyService.AdminCreateSCIMDirectory:output_type -> ssoready.v1.AdminCreateSCIMDirectoryResponse
	139, // 220: ssoready.v1.SSOReadyService.AdminUpdateSCIMDirectory:output_type -> ssoready.v1.AdminUpdateSCIMDirectoryResponse
	141, // 221: ssoready.v1.SSOReadyService.AdminRotateSCIMDirectoryBearerToken:output_type -> ssoready.v1.AdminRotateSCIMDirectoryBearerTokenResponse
	144, // [144:222] is the sub-list for method output_type
	66,  // [66:144] is the sub-list for method input_type
	66,  // [66:66] is the sub-list for extension type_name
	66,  // [66:66] is the sub-list for extension extendee
	0,   // [0:66] is the sub-list for field type_name
}

func init() { file_ssoready_v1_ssoready_proto_init() }
func file_ssoready_v1_ssoready_proto_init() {
	if File_ssoready_v1_ssoready_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ssoready_v1_ssoready_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AppUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*APIKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SAMLOAuthClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SAMLConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SAMLFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SCIMDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SCIMUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SCIMGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetSAMLRedirectURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSAMLRedirectURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RedeemSAMLAccessCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RedeemSAMLAccessCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ListSCIMUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListSCIMUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSCIMUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetSCIMUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListSCIMGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListSCIMGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetSCIMGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetSCIMGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ListOrganizationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ListOrganizationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrganizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrganizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateOrganizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSetupURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSetupURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ListSAMLConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ListSAMLConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetSAMLConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSAMLConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSAMLConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ListSCIMDirectoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*ListSCIMDirectoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GetSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GetSCIMDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSCIMDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSCIMDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*RotateSCIMDirectoryBearerTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*RotateSCIMDirectoryBearerTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*SignOutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*SignOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*WhoamiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*WhoamiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*GetOnboardingStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*GetOnboardingStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateOnboardingStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*OnboardingGetSAMLRedirectURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*OnboardingRedeemSAMLAccessCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GetStripeCheckoutURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*GetStripeCheckoutURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*RedeemStripeCheckoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*RedeemStripeCheckoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*GetStripeBillingPortalURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GetStripeBillingPortalURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GetAppOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*GetAppOrganizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*ListAppUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*ListAppUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnvironmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnvironmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*CreateEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*ListAPIKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*ListAPIKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*GetAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*CreateAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*ListSAMLOAuthClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*ListSAMLOAuthClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*GetSAMLOAuthClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSAMLOAuthClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSAMLOAuthClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*AppListOrganizationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*AppListOrganizationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*AppGetOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*AppCreateOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*AppUpdateOrganizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*AppCreateAdminSetupURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*AppCreateAdminSetupURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSAMLConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSAMLConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*AppGetSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*AppCreateSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*AppUpdateSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSAMLFlowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSAMLFlowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*AppGetSAMLFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*ParseSAMLMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*ParseSAMLMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSCIMDirectoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSCIMDirectoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*AppGetSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*AppCreateSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*AppUpdateSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*AppRotateSCIMDirectoryBearerTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*AppRotateSCIMDirectoryBearerTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSCIMUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSCIMUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*AppGetSCIMUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSCIMGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*AppGetSCIMGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*AppListSCIMGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*AdminRedeemOneTimeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*AdminRedeemOneTimeTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*AdminWhoamiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*AdminWhoamiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*AdminListSAMLConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*AdminListSAMLConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*AdminGetSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*AdminGetSAMLConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*AdminCreateSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*AdminCreateSAMLConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*AdminUpdateSAMLConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*AdminUpdateSAMLConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*AdminParseSAMLMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*AdminParseSAMLMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*AdminListSCIMDirectoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*AdminListSCIMDirectoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[133].Exporter = func(v any, i int) any {
			switch v := v.(*AdminGetSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[134].Exporter = func(v any, i int) any {
			switch v := v.(*AdminGetSCIMDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[135].Exporter = func(v any, i int) any {
			switch v := v.(*AdminCreateSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[136].Exporter = func(v any, i int) any {
			switch v := v.(*AdminCreateSCIMDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[137].Exporter = func(v any, i int) any {
			switch v := v.(*AdminUpdateSCIMDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[138].Exporter = func(v any, i int) any {
			switch v := v.(*AdminUpdateSCIMDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[139].Exporter = func(v any, i int) any {
			switch v := v.(*AdminRotateSCIMDirectoryBearerTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssoready_v1_ssoready_proto_msgTypes[140].Exporter = func(v any, i int) any {
			switch v := v.(*AdminRotateSCIMDirectoryBearerTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ssoready_v1_ssoready_proto_msgTypes[6].OneofWrappers = []any{
		(*SAMLFlow_UnsignedAssertion)(nil),
		(*SAMLFlow_BadIssuer)(nil),
		(*SAMLFlow_BadAudience)(nil),
		(*SAMLFlow_BadSubjectId)(nil),
		(*SAMLFlow_EmailOutsideOrganizationDomains)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ssoready_v1_ssoready_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   143,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ssoready_v1_ssoready_proto_goTypes,
		DependencyIndexes: file_ssoready_v1_ssoready_proto_depIdxs,
		EnumInfos:         file_ssoready_v1_ssoready_proto_enumTypes,
		MessageInfos:      file_ssoready_v1_ssoready_proto_msgTypes,
	}.Build()
	File_ssoready_v1_ssoready_proto = out.File
	file_ssoready_v1_ssoready_proto_rawDesc = nil
	file_ssoready_v1_ssoready_proto_goTypes = nil
	file_ssoready_v1_ssoready_proto_depIdxs = nil
}
